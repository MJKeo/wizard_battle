{"ast":null,"code":"import ActionType from \"../enums/actionType\";\nclass Action {\n  constructor(action_type, strength, accuracy, variance) {\n    if (new.target === Action) {\n      throw new Error(\"Action is abstract and cannot be instantiated directly\");\n    }\n    this.action_type = action_type;\n    this.strength = strength;\n    this.accuracy = accuracy;\n    this.variance = variance;\n  }\n  succeeds_accuracy(randomFn = Math.random) {\n    return Math.random() <= this.accuracy;\n  }\n  perform_action(randomFn = Math.random) {\n    if (!this.succeeds_accuracy(randomFn)) {\n      return {\n        succeeded: false\n      };\n    }\n    return this.perform_action_subclass(randomFn);\n  }\n  perform_action_subclass() {\n    throw new Error(\"perform_action_subclass must be implemented by subclasses\");\n  }\n  range() {\n    throw new Error(\"range must be implemented by subclasses\");\n  }\n  compact_effect() {\n    throw new Error(\"compact effect must be implemented by subclasses\");\n  }\n  mana_cost() {\n    throw new Error(\"mana_cost must be implemented by subclasses\");\n  }\n  overview() {\n    throw new Error(\"overview must be implemented by subclasses\");\n  }\n  failure_announcement() {\n    throw new Error(\"failure_announcement must be implemented by subclasses\");\n  }\n  success_announcement() {\n    throw new Error(\"success_announcement must be implemented by subclasses\");\n  }\n  action_target() {\n    throw new Error(\"action_target must be implemented by subclasses\");\n  }\n  display_card() {\n    throw new Error(\"display_card must be implemented by subclasses\");\n  }\n}\nexport default Action;","map":{"version":3,"names":["ActionType","Action","constructor","action_type","strength","accuracy","variance","new","target","Error","succeeds_accuracy","randomFn","Math","random","perform_action","succeeded","perform_action_subclass","range","compact_effect","mana_cost","overview","failure_announcement","success_announcement","action_target","display_card"],"sources":["/Users/michaelkeohane/Documents/Projects/wizard_battle/src/classes/action.js"],"sourcesContent":["import ActionType from \"../enums/actionType\";\n\nclass Action {\n  constructor(action_type, strength, accuracy, variance) {\n    if (new.target === Action) {\n      throw new Error(\"Action is abstract and cannot be instantiated directly\");\n    }\n    this.action_type = action_type;\n    this.strength = strength;\n    this.accuracy = accuracy;\n    this.variance = variance;\n  }\n\n  succeeds_accuracy(randomFn = Math.random) {\n    return Math.random() <= this.accuracy;\n  }\n\n  perform_action(randomFn = Math.random) {\n    if (!this.succeeds_accuracy(randomFn)) {\n      return { succeeded: false };\n    }\n    return this.perform_action_subclass(randomFn);\n  }\n\n  perform_action_subclass() {\n    throw new Error(\"perform_action_subclass must be implemented by subclasses\");\n  }\n\n  range() {\n    throw new Error(\"range must be implemented by subclasses\");\n  }\n\n  compact_effect() {\n    throw new Error(\"compact effect must be implemented by subclasses\");\n  }\n\n  mana_cost() {\n    throw new Error(\"mana_cost must be implemented by subclasses\");\n  }\n\n  overview() {\n    throw new Error(\"overview must be implemented by subclasses\");\n  }\n\n  failure_announcement() {\n    throw new Error(\"failure_announcement must be implemented by subclasses\");\n  }\n\n  success_announcement() {\n    throw new Error(\"success_announcement must be implemented by subclasses\");\n  }\n\n  action_target() {\n    throw new Error(\"action_target must be implemented by subclasses\");\n  }\n\n  display_card() {\n    throw new Error(\"display_card must be implemented by subclasses\");\n  }\n}\n\nexport default Action;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,qBAAqB;AAE5C,MAAMC,MAAM,CAAC;EACXC,WAAWA,CAACC,WAAW,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IACrD,IAAIC,GAAG,CAACC,MAAM,KAAKP,MAAM,EAAE;MACzB,MAAM,IAAIQ,KAAK,CAAC,wDAAwD,CAAC;IAC3E;IACA,IAAI,CAACN,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC1B;EAEAI,iBAAiBA,CAACC,QAAQ,GAAGC,IAAI,CAACC,MAAM,EAAE;IACxC,OAAOD,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,IAAI,CAACR,QAAQ;EACvC;EAEAS,cAAcA,CAACH,QAAQ,GAAGC,IAAI,CAACC,MAAM,EAAE;IACrC,IAAI,CAAC,IAAI,CAACH,iBAAiB,CAACC,QAAQ,CAAC,EAAE;MACrC,OAAO;QAAEI,SAAS,EAAE;MAAM,CAAC;IAC7B;IACA,OAAO,IAAI,CAACC,uBAAuB,CAACL,QAAQ,CAAC;EAC/C;EAEAK,uBAAuBA,CAAA,EAAG;IACxB,MAAM,IAAIP,KAAK,CAAC,2DAA2D,CAAC;EAC9E;EAEAQ,KAAKA,CAAA,EAAG;IACN,MAAM,IAAIR,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EAEAS,cAAcA,CAAA,EAAG;IACf,MAAM,IAAIT,KAAK,CAAC,kDAAkD,CAAC;EACrE;EAEAU,SAASA,CAAA,EAAG;IACV,MAAM,IAAIV,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEAW,QAAQA,CAAA,EAAG;IACT,MAAM,IAAIX,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EAEAY,oBAAoBA,CAAA,EAAG;IACrB,MAAM,IAAIZ,KAAK,CAAC,wDAAwD,CAAC;EAC3E;EAEAa,oBAAoBA,CAAA,EAAG;IACrB,MAAM,IAAIb,KAAK,CAAC,wDAAwD,CAAC;EAC3E;EAEAc,aAAaA,CAAA,EAAG;IACd,MAAM,IAAId,KAAK,CAAC,iDAAiD,CAAC;EACpE;EAEAe,YAAYA,CAAA,EAAG;IACb,MAAM,IAAIf,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACF;AAEA,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}