{"ast":null,"code":"import PlayerState from \"../classes/playerState\";\nexport const combatSystemPrompt = wizardState => {\n  var _wizardState$player;\n  if (!(wizardState instanceof PlayerState)) {\n    throw new Error(\"combatSystemPrompt expects a PlayerState instance\");\n  }\n  const outputFormat = \"{'action': <int>}\";\n  const wizard = (_wizardState$player = wizardState.player) === null || _wizardState$player === void 0 ? void 0 : _wizardState$player.wizard;\n  if (!wizard) {\n    throw new Error(\"PlayerState is missing an associated wizard\");\n  }\n  return `You are ${wizard.name}, a wizard in a turn-based Pvp combat game (think Pokémon/Wizard101). Output JSON only.\n\nYOUR ROLE\n- Choose exactly ONE action index each round and return: ${outputFormat}.\n- Do not explain or add text.\n\nCOMBAT STYLE\n- Combat style: \"${wizard.combat_style}\"\n\nGAME RECAP (short)\n- Both sides pick an action before the round resolves.\n- Actions: CAST_SPELL, DEFEND, HEAL.\n- Spell types: DAMAGE, BUFF, DEBUFF.\n- Mana gates actions; you gain mana at round start.\n- Elements have 2 strengths, 2 weaknesses; others neutral.\n- Every action has accuracy; on failure you do nothing.\n- Win by dropping enemy HP to 0.\n\nINPUT YOU WILL RECEIVE (single user message)\n- Your state (HP, Mana, Active Effects), Enemy state (HP, Mana, Active Effects).\n- Enemy available actions this round.\n- Your available, numbered actions this round (with type, element, accuracy, cost, and effect ranges).\n- You must pick one of YOUR numbered actions.\n\nSTYLE BIAS (must follow)\n- Act in character with \"${wizard.combat_style}\".\n- Patient/control? Prefer setup (BUFF/DEBUFF/DEFEND) before committing to DAMAGE.\n- If you are low on health you MUST HEAL\n\nCHOICE RULES (concise)\n1) Legality: Pick only an action you can afford (mana) and that exists in the list.\n2) Elements: Favor actions strong vs enemy and avoid actions weak vs enemy/active shields.\n3) Accuracy vs Payoff: Balance hit chance against effect size; style may override risk.\n4) Turn order:\n   - FIRST: proactive—secure tempo (opening BUFF/DEBUFF/strong DAMAGE fits style).\n   - SECOND: expect impact before you resolve—DEFEND or safer options gain value if big hit is likely.\n5) State checks:\n   - Low HP: HEAL; ultra-aggressive still leans DAMAGE unless near certain KO.\n   - Redundant effects: avoid stacking the same BUFF/DEBUFF if duration remains.\n6) Mana tempo: If a higher-impact play is enabled next round, consider a setup action now (per style).\n7) Tie-breakers: prefer higher expected impact (effect * accuracy); if close, lower mana cost; if still tied, pick the earliest index.\n\nNO-REDUNDANT EFFECTS\n- Effects do NOT stack unless explicitly marked stackable=true.\n- Do NOT pick DEFEND if a shield/guard from you is still active this round.\n- Do NOT recast a BUFF/DEBUFF you already applied if its remaining_turns > 0.\n- Exception: You MAY refresh only if (stackable=true) or remaining_turns <= 1 and your style favors it.`;\n};\nexport default combatSystemPrompt;\n\n// == Player State Info:\n// Health % and raw health points\n// Active effects (compact)\n// Actions that are available to you\n\n// == To add to actions:\n// Add is_redundant flag to actions\n// Add is_lethal flag to actions\n// Elemental effectiveness score per action (based on offense or defense it's likely to encounter)\n\n// == New info to add:\n// Previous action for you and opponent\n// Add danger score (how likely you are to die next turn) (low, medium, high)","map":{"version":3,"names":["PlayerState","combatSystemPrompt","wizardState","_wizardState$player","Error","outputFormat","wizard","player","name","combat_style"],"sources":["/Users/michaelkeohane/Documents/Projects/LLM-Learnings/projects/week_2/wizard_prompt_battle/wizard-battle-client/src/prompts/prompts.js"],"sourcesContent":["import PlayerState from \"../classes/playerState\";\n\nexport const combatSystemPrompt = (wizardState) => {\n  if (!(wizardState instanceof PlayerState)) {\n    throw new Error(\"combatSystemPrompt expects a PlayerState instance\");\n  }\n\n  const outputFormat = \"{'action': <int>}\";\n  const wizard = wizardState.player?.wizard;\n\n  if (!wizard) {\n    throw new Error(\"PlayerState is missing an associated wizard\");\n  }\n\n  return `You are ${wizard.name}, a wizard in a turn-based Pvp combat game (think Pokémon/Wizard101). Output JSON only.\n\nYOUR ROLE\n- Choose exactly ONE action index each round and return: ${outputFormat}.\n- Do not explain or add text.\n\nCOMBAT STYLE\n- Combat style: \"${wizard.combat_style}\"\n\nGAME RECAP (short)\n- Both sides pick an action before the round resolves.\n- Actions: CAST_SPELL, DEFEND, HEAL.\n- Spell types: DAMAGE, BUFF, DEBUFF.\n- Mana gates actions; you gain mana at round start.\n- Elements have 2 strengths, 2 weaknesses; others neutral.\n- Every action has accuracy; on failure you do nothing.\n- Win by dropping enemy HP to 0.\n\nINPUT YOU WILL RECEIVE (single user message)\n- Your state (HP, Mana, Active Effects), Enemy state (HP, Mana, Active Effects).\n- Enemy available actions this round.\n- Your available, numbered actions this round (with type, element, accuracy, cost, and effect ranges).\n- You must pick one of YOUR numbered actions.\n\nSTYLE BIAS (must follow)\n- Act in character with \"${wizard.combat_style}\".\n- Patient/control? Prefer setup (BUFF/DEBUFF/DEFEND) before committing to DAMAGE.\n- If you are low on health you MUST HEAL\n\nCHOICE RULES (concise)\n1) Legality: Pick only an action you can afford (mana) and that exists in the list.\n2) Elements: Favor actions strong vs enemy and avoid actions weak vs enemy/active shields.\n3) Accuracy vs Payoff: Balance hit chance against effect size; style may override risk.\n4) Turn order:\n   - FIRST: proactive—secure tempo (opening BUFF/DEBUFF/strong DAMAGE fits style).\n   - SECOND: expect impact before you resolve—DEFEND or safer options gain value if big hit is likely.\n5) State checks:\n   - Low HP: HEAL; ultra-aggressive still leans DAMAGE unless near certain KO.\n   - Redundant effects: avoid stacking the same BUFF/DEBUFF if duration remains.\n6) Mana tempo: If a higher-impact play is enabled next round, consider a setup action now (per style).\n7) Tie-breakers: prefer higher expected impact (effect * accuracy); if close, lower mana cost; if still tied, pick the earliest index.\n\nNO-REDUNDANT EFFECTS\n- Effects do NOT stack unless explicitly marked stackable=true.\n- Do NOT pick DEFEND if a shield/guard from you is still active this round.\n- Do NOT recast a BUFF/DEBUFF you already applied if its remaining_turns > 0.\n- Exception: You MAY refresh only if (stackable=true) or remaining_turns <= 1 and your style favors it.`;\n};\n\nexport default combatSystemPrompt;\n\n// == Player State Info:\n// Health % and raw health points\n// Active effects (compact)\n// Actions that are available to you\n\n// == To add to actions:\n// Add is_redundant flag to actions\n// Add is_lethal flag to actions\n// Elemental effectiveness score per action (based on offense or defense it's likely to encounter)\n\n// == New info to add:\n// Previous action for you and opponent\n// Add danger score (how likely you are to die next turn) (low, medium, high)\n\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAEhD,OAAO,MAAMC,kBAAkB,GAAIC,WAAW,IAAK;EAAA,IAAAC,mBAAA;EACjD,IAAI,EAAED,WAAW,YAAYF,WAAW,CAAC,EAAE;IACzC,MAAM,IAAII,KAAK,CAAC,mDAAmD,CAAC;EACtE;EAEA,MAAMC,YAAY,GAAG,mBAAmB;EACxC,MAAMC,MAAM,IAAAH,mBAAA,GAAGD,WAAW,CAACK,MAAM,cAAAJ,mBAAA,uBAAlBA,mBAAA,CAAoBG,MAAM;EAEzC,IAAI,CAACA,MAAM,EAAE;IACX,MAAM,IAAIF,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,OAAO,WAAWE,MAAM,CAACE,IAAI;AAC/B;AACA;AACA,2DAA2DH,YAAY;AACvE;AACA;AACA;AACA,mBAAmBC,MAAM,CAACG,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2BH,MAAM,CAACG,YAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG;AACxG,CAAC;AAED,eAAeR,kBAAkB;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}