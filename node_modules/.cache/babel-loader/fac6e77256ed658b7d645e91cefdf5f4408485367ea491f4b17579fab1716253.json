{"ast":null,"code":"var _jsxFileName = \"/Users/michaelkeohane/Documents/Projects/wizard_battle/src/display_wizards.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport Wizard from \"./classes/wizard\";\nimport Spell from \"./classes/spell\";\nimport Element from \"./enums/element\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ensureActionInstance = action => {\n  if (!action) {\n    return null;\n  }\n  if (typeof action.display_card === \"function\") {\n    return action;\n  }\n  try {\n    var _ref, _action$spell_type, _action$description, _action$element, _action$strength;\n    return Spell.build_from_json({\n      name: action.name,\n      spell_type: String((_ref = (_action$spell_type = action.spell_type) !== null && _action$spell_type !== void 0 ? _action$spell_type : action.type) !== null && _ref !== void 0 ? _ref : \"\").toUpperCase(),\n      description: (_action$description = action.description) !== null && _action$description !== void 0 ? _action$description : \"\",\n      element: String((_action$element = action.element) !== null && _action$element !== void 0 ? _action$element : \"\").toUpperCase(),\n      strength: Number((_action$strength = action.strength) !== null && _action$strength !== void 0 ? _action$strength : 0)\n    });\n  } catch (error) {\n    console.error(\"Failed to coerce action payload into Spell instance\", action, error);\n    return null;\n  }\n};\nconst getActionCardClass = card => {\n  var _card$type;\n  const type = String((_card$type = card === null || card === void 0 ? void 0 : card.type) !== null && _card$type !== void 0 ? _card$type : \"\").toUpperCase();\n  if (type === \"HEAL\") {\n    return \"spell-card-heal\";\n  }\n  if (type === \"DEFENSE\") {\n    return \"spell-card-defense\";\n  }\n  return \"spell-card-spell\";\n};\nconst formatAccuracy = accuracy => {\n  if (typeof accuracy !== \"number\") {\n    return \"🎯 ?\";\n  }\n  return `🎯 ${Math.round(accuracy * 100)}%`;\n};\nconst formatRange = card => {\n  var _card$type2;\n  if (!card) {\n    return \"?\";\n  }\n  const type = String((_card$type2 = card.type) !== null && _card$type2 !== void 0 ? _card$type2 : \"\").toUpperCase();\n  const emoji = type === \"HEAL\" ? \"🍃\" : type === \"DAMAGE\" ? \"💥\" : type === \"BUFF\" ? \"📈\" : type === \"DEBUFF\" ? \"📉\" : type === \"DEFENSE\" ? \"🛡️\" : \"\";\n  if (typeof card.range === \"string\") {\n    return `${emoji} ${card.range}`.trim();\n  } else if (Array.isArray(card.range) && card.range.length === 2) {\n    const [min, max] = card.range;\n    return `${emoji} ${min}-${max}`.trim();\n  }\n};\nconst STAT_CONFIG = [{\n  key: \"attack\",\n  label: \"Attack\",\n  color: \"#f87171\"\n}, {\n  key: \"defense\",\n  label: \"Defense\",\n  color: \"#60a5fa\"\n}, {\n  key: \"healing\",\n  label: \"Healing\",\n  color: \"#34d399\"\n}, {\n  key: \"arcane\",\n  label: \"Arcane\",\n  color: \"#c084fc\"\n}];\nfunction DisplayWizards({\n  descriptions,\n  apiBaseUrl,\n  onReset,\n  onBeginBattle = () => {},\n  onWizardReady,\n  playerOneWizard,\n  playerTwoWizard\n}) {\n  _s();\n  const [results, setResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const descriptionByLabel = useMemo(() => {\n    var _descriptions$playerO, _descriptions$playerT;\n    return {\n      \"Player 1\": (_descriptions$playerO = descriptions === null || descriptions === void 0 ? void 0 : descriptions.playerOne) !== null && _descriptions$playerO !== void 0 ? _descriptions$playerO : \"\",\n      \"Player 2\": (_descriptions$playerT = descriptions === null || descriptions === void 0 ? void 0 : descriptions.playerTwo) !== null && _descriptions$playerT !== void 0 ? _descriptions$playerT : \"\"\n    };\n  }, [descriptions]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setResults([]);\n      setErrorMessage(\"\");\n      const {\n        playerOne,\n        playerTwo\n      } = descriptions;\n      const entries = [{\n        label: \"Player 1\",\n        description: playerOne\n      }, {\n        label: \"Player 2\",\n        description: playerTwo\n      }];\n      const appendResult = (label, updates) => {\n        setResults(prev => {\n          const existing = prev.find(entry => entry.label === label);\n          if (existing) {\n            return prev.map(entry => entry.label === label ? {\n              ...entry,\n              ...updates\n            } : entry);\n          }\n          return [...prev, {\n            label,\n            ...updates\n          }];\n        });\n      };\n      try {\n        await Promise.all(entries.map(async ({\n          label,\n          description\n        }) => {\n          const statsResponse = await fetch(`${apiBaseUrl}/generate_wizard_stats`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              description\n            })\n          });\n          if (!statsResponse.ok) {\n            throw new Error(`${label} wizard stats failed with status ${statsResponse.status}`);\n          }\n          const statsData = await statsResponse.json();\n          appendResult(label, {\n            stats: statsData,\n            description\n          });\n          let spellsData = [];\n          let attempt = 0;\n          while (attempt < 3) {\n            const spellsResponse = await fetch(`${apiBaseUrl}/generate_spells`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                description,\n                name: statsData.name,\n                primary_element: statsData.primary_element,\n                secondary_element: statsData.secondary_element,\n                combat_style: statsData.combat_style\n              })\n            });\n            if (!spellsResponse.ok) {\n              throw new Error(`${label} spell generation failed with status ${spellsResponse.status}`);\n            }\n            const maybeSpells = await spellsResponse.json();\n            if (Array.isArray(maybeSpells) && maybeSpells.length >= 4) {\n              spellsData = maybeSpells;\n              break;\n            }\n            attempt += 1;\n            if (attempt >= 3) {\n              throw new Error(`${label} spell generation returned fewer than 4 spells after ${attempt} attempts`);\n            }\n          }\n          let wizardInstance = null;\n          try {\n            const spellInstances = spellsData.map(spell => {\n              var _ref2, _spell$spell_type, _spell$description, _spell$element, _spell$strength;\n              return Spell.build_from_json({\n                name: spell.name,\n                spell_type: String((_ref2 = (_spell$spell_type = spell.spell_type) !== null && _spell$spell_type !== void 0 ? _spell$spell_type : spell.type) !== null && _ref2 !== void 0 ? _ref2 : \"\").toUpperCase(),\n                description: (_spell$description = spell.description) !== null && _spell$description !== void 0 ? _spell$description : \"\",\n                element: String((_spell$element = spell.element) !== null && _spell$element !== void 0 ? _spell$element : \"\"),\n                strength: Number((_spell$strength = spell.strength) !== null && _spell$strength !== void 0 ? _spell$strength : 0)\n              });\n            });\n            wizardInstance = new Wizard(statsData.name, Element.fromName(statsData.primary_element), Element.fromName(statsData.secondary_element), Number(statsData.attack), Number(statsData.defense), Number(statsData.health), Number(statsData.healing), Number(statsData.arcane), spellInstances, statsData.combat_style);\n          } catch (wizardError) {\n            console.error(`Failed to build wizard for ${label}`, wizardError);\n          }\n          appendResult(label, {\n            spells: spellsData,\n            wizard: wizardInstance\n          });\n          if (wizardInstance && onWizardReady) {\n            onWizardReady(label, wizardInstance);\n          }\n        }));\n      } catch (error) {\n        setErrorMessage(error instanceof Error ? `Failed to generate wizards or spells. ${error.message}` : \"Failed to generate wizards or spells.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [descriptions, apiBaseUrl]);\n  const playersByLabel = useMemo(() => ({\n    \"Player 1\": playerOneWizard,\n    \"Player 2\": playerTwoWizard\n  }), [playerOneWizard, playerTwoWizard]);\n  useEffect(() => {\n    if (!onWizardReady) {\n      return;\n    }\n    results.forEach(({\n      label,\n      stats,\n      spells\n    }) => {\n      if (!stats || !spells) {\n        return;\n      }\n      if (playersByLabel[label]) {\n        return;\n      }\n      const wizardInstance = new Wizard(stats.name, Element.fromName(stats.primary_element), Element.fromName(stats.secondary_element), stats.attack, stats.defense, stats.health, stats.healing, stats.arcane, spells.map(spell => {\n        var _spell$description2;\n        return new Spell(spell.name, spell.spell_type ? spell.spell_type : spell.type, (_spell$description2 = spell.description) !== null && _spell$description2 !== void 0 ? _spell$description2 : \"\", Element.fromName(spell.element), spell.strength);\n      }), stats.combat_style);\n      onWizardReady(label, wizardInstance);\n    });\n  }, [results, onWizardReady, playersByLabel]);\n  const allComplete = results.length === 2 && results.every(entry => entry.stats && entry.spells);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"wizard-section\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 24\n    }, this), (!allComplete || isLoading) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"summary-title\",\n        children: isLoading && !allComplete ? \"generating wizards...\" : \"Your wizards are ready for combat!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `wizard-actions-header${allComplete ? \" wizard-actions-header--complete\" : \"\"}`,\n      children: allComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prompt-button\",\n        type: \"button\",\n        onClick: onBeginBattle,\n        disabled: !(playerOneWizard && playerTwoWizard),\n        title: playerOneWizard && playerTwoWizard ? \"\" : \"Both wizards must finish loading\",\n        children: \"Begin Battle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-grid\",\n      children: [\"Player 1\", \"Player 2\"].map(label => {\n        var _wizard$primary_eleme, _wizard$secondary_ele;\n        const record = results.find(entry => entry.label === label);\n        if (!record) {\n          const initialDescription = descriptionByLabel[label];\n          return /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"wizard-card\",\n            children: /*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"wizard-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"wizard-label\",\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this), initialDescription && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"wizard-description-origin\",\n                children: [\"\\\"\", initialDescription, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"loading-message\",\n                children: \"Awaiting wizard...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this);\n        }\n        const {\n          stats,\n          spells,\n          wizard: localWizard,\n          description: recordDescription\n        } = record;\n        const wizardFromProps = label === \"Player 1\" ? playerOneWizard : playerTwoWizard;\n        const wizard = wizardFromProps !== null && wizardFromProps !== void 0 ? wizardFromProps : localWizard;\n        const displayStats = wizard !== null && wizard !== void 0 ? wizard : stats;\n        const description = recordDescription !== null && recordDescription !== void 0 ? recordDescription : descriptionByLabel[label];\n        const name = wizard ? wizard.name : stats === null || stats === void 0 ? void 0 : stats.name;\n        const combatStyle = wizard ? wizard.combat_style : stats === null || stats === void 0 ? void 0 : stats.combat_style;\n        const primaryElement = wizard ? (_wizard$primary_eleme = wizard.primary_element) === null || _wizard$primary_eleme === void 0 ? void 0 : _wizard$primary_eleme.name : stats === null || stats === void 0 ? void 0 : stats.primary_element;\n        const secondaryElement = wizard ? (_wizard$secondary_ele = wizard.secondary_element) === null || _wizard$secondary_ele === void 0 ? void 0 : _wizard$secondary_ele.name : stats === null || stats === void 0 ? void 0 : stats.secondary_element;\n        const rawActions = wizard ? wizard.all_actions() : (spells !== null && spells !== void 0 ? spells : []).map(spell => ensureActionInstance(spell)).filter(Boolean);\n        const actionsToShow = rawActions.map(action => {\n          var _ensureActionInstance, _ensureActionInstance2, _ensureActionInstance3, _action$display_card;\n          return {\n            action,\n            card: (_ensureActionInstance = (_ensureActionInstance2 = ensureActionInstance(action)) === null || _ensureActionInstance2 === void 0 ? void 0 : (_ensureActionInstance3 = _ensureActionInstance2.display_card) === null || _ensureActionInstance3 === void 0 ? void 0 : _ensureActionInstance3.call(_ensureActionInstance2)) !== null && _ensureActionInstance !== void 0 ? _ensureActionInstance : action === null || action === void 0 ? void 0 : (_action$display_card = action.display_card) === null || _action$display_card === void 0 ? void 0 : _action$display_card.call(action)\n          };\n        }).map(({\n          action,\n          card\n        }) => {\n          var _card$type3;\n          if (!card) {\n            return {\n              action,\n              card: null\n            };\n          }\n          if (String((_card$type3 = card.type) !== null && _card$type3 !== void 0 ? _card$type3 : \"\").toUpperCase() === \"DEFENSE\") {\n            return {\n              action,\n              card: {\n                ...card,\n                name: \"Shield\"\n              }\n            };\n          }\n          return {\n            action,\n            card\n          };\n        }).filter(({\n          card\n        }) => card !== null).sort((a, b) => {\n          var _a$card$type, _b$card$type, _typeOrder$aType, _typeOrder$bType, _a$card$name, _b$card$name;\n          const typeOrder = {\n            DAMAGE: 0,\n            BUFF: 1,\n            DEBUFF: 2,\n            DEFENSE: 3,\n            DEFEND: 3,\n            HEAL: 4\n          };\n          const aType = String((_a$card$type = a.card.type) !== null && _a$card$type !== void 0 ? _a$card$type : \"\").toUpperCase();\n          const bType = String((_b$card$type = b.card.type) !== null && _b$card$type !== void 0 ? _b$card$type : \"\").toUpperCase();\n          const orderDiff = ((_typeOrder$aType = typeOrder[aType]) !== null && _typeOrder$aType !== void 0 ? _typeOrder$aType : 99) - ((_typeOrder$bType = typeOrder[bType]) !== null && _typeOrder$bType !== void 0 ? _typeOrder$bType : 99);\n          if (orderDiff !== 0) {\n            return orderDiff;\n          }\n          return String((_a$card$name = a.card.name) !== null && _a$card$name !== void 0 ? _a$card$name : \"\").localeCompare(String((_b$card$name = b.card.name) !== null && _b$card$name !== void 0 ? _b$card$name : \"\"));\n        });\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"wizard-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"wizard-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"wizard-label\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"wizard-description-origin\",\n              children: [\"\\\"\", description, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 31\n            }, this), displayStats ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"wizard-name\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"wizard-style\",\n                children: combatStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"element-tags\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `element-pill element-${primaryElement === null || primaryElement === void 0 ? void 0 : primaryElement.toLowerCase()}`,\n                  children: primaryElement\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `element-pill element-${secondaryElement === null || secondaryElement === void 0 ? void 0 : secondaryElement.toLowerCase()}`,\n                  children: secondaryElement\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"loading-message\",\n              children: \"Awaiting stats...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), displayStats && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"wizard-stats\",\n            children: STAT_CONFIG.map(({\n              key,\n              label: statLabel,\n              color\n            }) => {\n              var _displayStats$key;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: statLabel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-meter\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-meter__fill\",\n                    style: {\n                      width: `${Math.min(Math.max((_displayStats$key = displayStats === null || displayStats === void 0 ? void 0 : displayStats[key]) !== null && _displayStats$key !== void 0 ? _displayStats$key : 0, 0), 1) * 100}%`,\n                      backgroundColor: color\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 21\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), actionsToShow.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"wizard-spells\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"summary-subtitle\",\n              children: \"Spells\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spell-cards\",\n              children: actionsToShow.map(({\n                card\n              }, index) => {\n                var _card$mana_cost, _card$description, _card$element, _card$element2;\n                const cardClassName = getActionCardClass(card);\n                if (!card) {\n                  return null;\n                }\n                const accuracyLabel = formatAccuracy(card.accuracy);\n                const manaCostLabel = `🔮 ${(_card$mana_cost = card.mana_cost) !== null && _card$mana_cost !== void 0 ? _card$mana_cost : \"?\"}`;\n                const rangeLabel = formatRange(card);\n                const description = (_card$description = card.description) !== null && _card$description !== void 0 ? _card$description : \"\";\n                const elementLabel = (_card$element = card.element) !== null && _card$element !== void 0 ? _card$element : null;\n                const elementClass = elementLabel ? `element-pill element-${String((_card$element2 = card.element) !== null && _card$element2 !== void 0 ? _card$element2 : \"generic\").toLowerCase()}` : null;\n                const spellToneClass = cardClassName === \"spell-card-spell\" && index < 4 ? `spell-card-spell-${index}` : \"\";\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `spell-card spell-card--static ${cardClassName} ${spellToneClass}`.trim(),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"spell-card__row spell-card__row--primary\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"spell-card__primary-left\",\n                      children: [elementClass && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: elementClass,\n                        children: elementLabel\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 436,\n                        columnNumber: 46\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"spell-card__name\",\n                        children: card.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 437,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"spell-card__primary-right\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"spell-card__meta spell-card__meta--range\",\n                        children: rangeLabel\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 440,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"spell-card__meta\",\n                        children: accuracyLabel\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"spell-card__meta\",\n                        children: manaCostLabel\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"spell-card__row spell-card__row--description spell-card__row--description--static\",\n                    children: description && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"spell-card__description\",\n                      children: /*#__PURE__*/_jsxDEV(\"em\", {\n                        children: description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 447,\n                        columnNumber: 71\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 25\n                  }, this)]\n                }, `${card.name}-${index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this)]\n        }, label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-footer-actions\",\n      children: [allComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prompt-button prompt-button--full\",\n        type: \"button\",\n        onClick: onBeginBattle,\n        disabled: !(playerOneWizard && playerTwoWizard),\n        title: playerOneWizard && playerTwoWizard ? \"\" : \"Both wizards must finish loading\",\n        children: \"Begin Battle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prompt-button button-outline prompt-button--full\",\n        type: \"button\",\n        onClick: onReset,\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayWizards, \"aCjUrHnD06nV1UcwxVZAkgM+X/I=\");\n_c = DisplayWizards;\nexport default DisplayWizards;\nvar _c;\n$RefreshReg$(_c, \"DisplayWizards\");","map":{"version":3,"names":["useEffect","useMemo","useState","Wizard","Spell","Element","jsxDEV","_jsxDEV","Fragment","_Fragment","ensureActionInstance","action","display_card","_ref","_action$spell_type","_action$description","_action$element","_action$strength","build_from_json","name","spell_type","String","type","toUpperCase","description","element","strength","Number","error","console","getActionCardClass","card","_card$type","formatAccuracy","accuracy","Math","round","formatRange","_card$type2","emoji","range","trim","Array","isArray","length","min","max","STAT_CONFIG","key","label","color","DisplayWizards","descriptions","apiBaseUrl","onReset","onBeginBattle","onWizardReady","playerOneWizard","playerTwoWizard","_s","results","setResults","errorMessage","setErrorMessage","isLoading","setIsLoading","descriptionByLabel","_descriptions$playerO","_descriptions$playerT","playerOne","playerTwo","fetchData","entries","appendResult","updates","prev","existing","find","entry","map","Promise","all","statsResponse","fetch","method","headers","body","JSON","stringify","ok","Error","status","statsData","json","stats","spellsData","attempt","spellsResponse","primary_element","secondary_element","combat_style","maybeSpells","wizardInstance","spellInstances","spell","_ref2","_spell$spell_type","_spell$description","_spell$element","_spell$strength","fromName","attack","defense","health","healing","arcane","wizardError","spells","wizard","message","playersByLabel","forEach","_spell$description2","allComplete","every","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","title","_wizard$primary_eleme","_wizard$secondary_ele","record","initialDescription","localWizard","recordDescription","wizardFromProps","displayStats","combatStyle","primaryElement","secondaryElement","rawActions","all_actions","filter","Boolean","actionsToShow","_ensureActionInstance","_ensureActionInstance2","_ensureActionInstance3","_action$display_card","call","_card$type3","sort","a","b","_a$card$type","_b$card$type","_typeOrder$aType","_typeOrder$bType","_a$card$name","_b$card$name","typeOrder","DAMAGE","BUFF","DEBUFF","DEFENSE","DEFEND","HEAL","aType","bType","orderDiff","localeCompare","toLowerCase","statLabel","_displayStats$key","style","width","backgroundColor","index","_card$mana_cost","_card$description","_card$element","_card$element2","cardClassName","accuracyLabel","manaCostLabel","mana_cost","rangeLabel","elementLabel","elementClass","spellToneClass","_c","$RefreshReg$"],"sources":["/Users/michaelkeohane/Documents/Projects/wizard_battle/src/display_wizards.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport Wizard from \"./classes/wizard\";\nimport Spell from \"./classes/spell\";\nimport Element from \"./enums/element\";\n\nconst ensureActionInstance = (action) => {\n  if (!action) {\n    return null;\n  }\n\n  if (typeof action.display_card === \"function\") {\n    return action;\n  }\n\n  try {\n    return Spell.build_from_json({\n      name: action.name,\n      spell_type: String(action.spell_type ?? action.type ?? \"\").toUpperCase(),\n      description: action.description ?? \"\",\n      element: String(action.element ?? \"\").toUpperCase(),\n      strength: Number(action.strength ?? 0),\n    });\n  } catch (error) {\n    console.error(\"Failed to coerce action payload into Spell instance\", action, error);\n    return null;\n  }\n};\n\nconst getActionCardClass = (card) => {\n  const type = String(card?.type ?? \"\").toUpperCase();\n  if (type === \"HEAL\") {\n    return \"spell-card-heal\";\n  }\n  if (type === \"DEFENSE\") {\n    return \"spell-card-defense\";\n  }\n  return \"spell-card-spell\";\n};\n\nconst formatAccuracy = (accuracy) => {\n  if (typeof accuracy !== \"number\") {\n    return \"🎯 ?\";\n  }\n  return `🎯 ${Math.round(accuracy * 100)}%`;\n};\n\nconst formatRange = (card) => {\n  if (!card) {\n    return \"?\";\n  }\n\n  const type = String(card.type ?? \"\").toUpperCase();\n\n  const emoji =\n    type === \"HEAL\"\n      ? \"🍃\"\n      : type === \"DAMAGE\"\n      ? \"💥\"\n      : type === \"BUFF\"\n      ? \"📈\"\n      : type === \"DEBUFF\"\n      ? \"📉\"\n      : type === \"DEFENSE\"\n      ? \"🛡️\"\n      : \"\";\n\n  if (typeof card.range === \"string\") {\n    return `${emoji} ${card.range}`.trim();\n  } else if (Array.isArray(card.range) && card.range.length === 2) {\n    const [min, max] = card.range;\n    return `${emoji} ${min}-${max}`.trim();\n  }\n};\n\nconst STAT_CONFIG = [\n  { key: \"attack\", label: \"Attack\", color: \"#f87171\" },\n  { key: \"defense\", label: \"Defense\", color: \"#60a5fa\" },\n  { key: \"healing\", label: \"Healing\", color: \"#34d399\" },\n  { key: \"arcane\", label: \"Arcane\", color: \"#c084fc\" },\n];\n\nfunction DisplayWizards({\n  descriptions,\n  apiBaseUrl,\n  onReset,\n  onBeginBattle = () => {},\n  onWizardReady,\n  playerOneWizard,\n  playerTwoWizard,\n}) {\n  const [results, setResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const descriptionByLabel = useMemo(() => ({\n    \"Player 1\": descriptions?.playerOne ?? \"\",\n    \"Player 2\": descriptions?.playerTwo ?? \"\",\n  }), [descriptions]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setResults([]);\n      setErrorMessage(\"\");\n\n      const { playerOne, playerTwo } = descriptions;\n      const entries = [\n        { label: \"Player 1\", description: playerOne },\n        { label: \"Player 2\", description: playerTwo },\n      ];\n\n      const appendResult = (label, updates) => {\n        setResults((prev) => {\n          const existing = prev.find((entry) => entry.label === label);\n          if (existing) {\n            return prev.map((entry) =>\n              entry.label === label ? { ...entry, ...updates } : entry\n            );\n          }\n          return [...prev, { label, ...updates }];\n        });\n      };\n\n      try {\n        await Promise.all(\n          entries.map(async ({ label, description }) => {\n            const statsResponse = await fetch(`${apiBaseUrl}/generate_wizard_stats`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({ description }),\n            });\n\n            if (!statsResponse.ok) {\n              throw new Error(`${label} wizard stats failed with status ${statsResponse.status}`);\n            }\n\n            const statsData = await statsResponse.json();\n            appendResult(label, { stats: statsData, description });\n\n            let spellsData = [];\n            let attempt = 0;\n\n            while (attempt < 3) {\n              const spellsResponse = await fetch(`${apiBaseUrl}/generate_spells`, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  description,\n                  name: statsData.name,\n                  primary_element: statsData.primary_element,\n                  secondary_element: statsData.secondary_element,\n                  combat_style: statsData.combat_style,\n                }),\n              });\n\n              if (!spellsResponse.ok) {\n                throw new Error(`${label} spell generation failed with status ${spellsResponse.status}`);\n              }\n\n              const maybeSpells = await spellsResponse.json();\n              if (Array.isArray(maybeSpells) && maybeSpells.length >= 4) {\n                spellsData = maybeSpells;\n                break;\n              }\n\n              attempt += 1;\n\n              if (attempt >= 3) {\n                throw new Error(`${label} spell generation returned fewer than 4 spells after ${attempt} attempts`);\n              }\n            }\n\n            let wizardInstance = null;\n            try {\n              const spellInstances = spellsData.map((spell) =>\n                Spell.build_from_json({\n                  name: spell.name,\n                  spell_type: String(spell.spell_type ?? spell.type ?? \"\").toUpperCase(),\n                  description: spell.description ?? \"\",\n                  element: String(spell.element ?? \"\"),\n                  strength: Number(spell.strength ?? 0),\n                })\n              );\n\n              wizardInstance = new Wizard(\n                statsData.name,\n                Element.fromName(statsData.primary_element),\n                Element.fromName(statsData.secondary_element),\n                Number(statsData.attack),\n                Number(statsData.defense),\n                Number(statsData.health),\n                Number(statsData.healing),\n                Number(statsData.arcane),\n                spellInstances,\n                statsData.combat_style\n              );\n            } catch (wizardError) {\n              console.error(`Failed to build wizard for ${label}`, wizardError);\n            }\n\n            appendResult(label, { spells: spellsData, wizard: wizardInstance });\n            if (wizardInstance && onWizardReady) {\n              onWizardReady(label, wizardInstance);\n            }\n          })\n        );\n      } catch (error) {\n        setErrorMessage(\n          error instanceof Error\n            ? `Failed to generate wizards or spells. ${error.message}`\n            : \"Failed to generate wizards or spells.\"\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [descriptions, apiBaseUrl]);\n\n  const playersByLabel = useMemo(() => ({\n    \"Player 1\": playerOneWizard,\n    \"Player 2\": playerTwoWizard,\n  }), [playerOneWizard, playerTwoWizard]);\n\n  useEffect(() => {\n    if (!onWizardReady) {\n      return;\n    }\n\n    results.forEach(({ label, stats, spells }) => {\n      if (!stats || !spells) {\n        return;\n      }\n\n      if (playersByLabel[label]) {\n        return;\n      }\n\n      const wizardInstance = new Wizard(\n        stats.name,\n        Element.fromName(stats.primary_element),\n        Element.fromName(stats.secondary_element),\n        stats.attack,\n        stats.defense,\n        stats.health,\n        stats.healing,\n        stats.arcane,\n        spells.map((spell) =>\n          new Spell(\n            spell.name,\n            spell.spell_type ? spell.spell_type : spell.type,\n            spell.description ?? \"\",\n            Element.fromName(spell.element),\n            spell.strength\n          )\n        ),\n        stats.combat_style\n      );\n\n      onWizardReady(label, wizardInstance);\n    });\n  }, [results, onWizardReady, playersByLabel]);\n\n  const allComplete =\n    results.length === 2 && results.every((entry) => entry.stats && entry.spells);\n\n  return (\n    <section className=\"wizard-section\">\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n      {(!allComplete || isLoading) && (\n        <div className=\"summary-header\">\n          <h2 className=\"summary-title\">\n            {isLoading && !allComplete ? \"generating wizards...\" : \"Your wizards are ready for combat!\"}\n          </h2>\n        </div>\n      )}\n\n      <div className={`wizard-actions-header${allComplete ? \" wizard-actions-header--complete\" : \"\"}`}>\n        {allComplete && (\n          <button\n            className=\"prompt-button\"\n            type=\"button\"\n            onClick={onBeginBattle}\n            disabled={!(playerOneWizard && playerTwoWizard)}\n            title={playerOneWizard && playerTwoWizard ? \"\" : \"Both wizards must finish loading\"}\n          >\n            Begin Battle\n          </button>\n        )}\n      </div>\n\n      <div className=\"wizard-grid\">\n        {[\"Player 1\", \"Player 2\"].map((label) => {\n          const record = results.find((entry) => entry.label === label);\n          if (!record) {\n            const initialDescription = descriptionByLabel[label];\n            return (\n              <article key={label} className=\"wizard-card\">\n                <header className=\"wizard-header\">\n                  <p className=\"wizard-label\">{label}</p>\n                  {initialDescription && (\n                    <p className=\"wizard-description-origin\">\"{initialDescription}\"</p>\n                  )}\n                  <p className=\"loading-message\">Awaiting wizard...</p>\n                </header>\n              </article>\n            );\n          }\n\n          const { stats, spells, wizard: localWizard, description: recordDescription } = record;\n          const wizardFromProps = label === \"Player 1\" ? playerOneWizard : playerTwoWizard;\n          const wizard = wizardFromProps ?? localWizard;\n          const displayStats = wizard ?? stats;\n\n          const description = recordDescription ?? descriptionByLabel[label];\n\n          const name = wizard ? wizard.name : stats?.name;\n          const combatStyle = wizard ? wizard.combat_style : stats?.combat_style;\n          const primaryElement = wizard\n            ? wizard.primary_element?.name\n            : stats?.primary_element;\n          const secondaryElement = wizard\n            ? wizard.secondary_element?.name\n            : stats?.secondary_element;\n          const rawActions = wizard\n            ? wizard.all_actions()\n            : (spells ?? []).map((spell) => ensureActionInstance(spell)).filter(Boolean);\n\n          const actionsToShow = rawActions\n            .map((action) => ({ action, card: ensureActionInstance(action)?.display_card?.() ?? action?.display_card?.() }))\n            .map(({ action, card }) => {\n              if (!card) {\n                return { action, card: null };\n              }\n\n              if (String(card.type ?? \"\").toUpperCase() === \"DEFENSE\") {\n                return {\n                  action,\n                  card: { ...card, name: \"Shield\" },\n                };\n              }\n\n              return { action, card };\n            })\n            .filter(({ card }) => card !== null)\n            .sort((a, b) => {\n              const typeOrder = { DAMAGE: 0, BUFF: 1, DEBUFF: 2, DEFENSE: 3, DEFEND: 3, HEAL: 4 };\n              const aType = String(a.card.type ?? \"\").toUpperCase();\n              const bType = String(b.card.type ?? \"\").toUpperCase();\n              const orderDiff = (typeOrder[aType] ?? 99) - (typeOrder[bType] ?? 99);\n              if (orderDiff !== 0) {\n                return orderDiff;\n              }\n              return String(a.card.name ?? \"\").localeCompare(String(b.card.name ?? \"\"));\n            });\n\n          return (\n            <article key={label} className=\"wizard-card\">\n            <header className=\"wizard-header\">\n              <p className=\"wizard-label\">{label}</p>\n              {description && <p className=\"wizard-description-origin\">\"{description}\"</p>} \n              {displayStats ? (\n                <>\n                  <h3 className=\"wizard-name\">{name}</h3>\n                  <p className=\"wizard-style\">{combatStyle}</p>\n                  <div className=\"element-tags\">\n                    <span className={`element-pill element-${primaryElement?.toLowerCase()}`}>\n                      {primaryElement}\n                    </span>\n                    <span className={`element-pill element-${secondaryElement?.toLowerCase()}`}>\n                      {secondaryElement}\n                    </span>\n                  </div>\n                </>\n              ) : (\n                <p className=\"loading-message\">Awaiting stats...</p>\n              )}\n            </header>\n\n            {displayStats && (\n              <section className=\"wizard-stats\">\n                {STAT_CONFIG.map(({ key, label: statLabel, color }) => (\n                  <div key={key} className=\"stat-row\">\n                    <span className=\"stat-label\">{statLabel}</span>\n                    <div className=\"stat-meter\">\n                      <div\n                        className=\"stat-meter__fill\"\n                        style={{\n                          width: `${Math.min(Math.max(displayStats?.[key] ?? 0, 0), 1) * 100}%`,\n                          backgroundColor: color,\n                        }}\n                      />\n                    </div>\n                  </div>\n                ))}\n              </section>\n            )}\n\n            {actionsToShow.length > 0 && (\n              <section className=\"wizard-spells\">\n                <h4 className=\"summary-subtitle\">Spells</h4>\n                <div className=\"spell-cards\">\n                  {actionsToShow.map(({ card }, index) => {\n                    const cardClassName = getActionCardClass(card);\n\n                    if (!card) {\n                      return null;\n                    }\n\n                    const accuracyLabel = formatAccuracy(card.accuracy);\n                    const manaCostLabel = `🔮 ${card.mana_cost ?? \"?\"}`;\n                    const rangeLabel = formatRange(card);\n                    const description = card.description ?? \"\";\n                    const elementLabel = card.element ?? null;\n                    const elementClass = elementLabel\n                      ? `element-pill element-${String(card.element ?? \"generic\").toLowerCase()}`\n                      : null;\n                    const spellToneClass =\n                      cardClassName === \"spell-card-spell\" && index < 4\n                        ? `spell-card-spell-${index}`\n                        : \"\";\n\n                    return (\n                      <div\n                        key={`${card.name}-${index}`}\n                        className={`spell-card spell-card--static ${cardClassName} ${spellToneClass}`.trim()}\n                      >\n                        <div className=\"spell-card__row spell-card__row--primary\">\n                          <div className=\"spell-card__primary-left\">\n                            {elementClass && <span className={elementClass}>{elementLabel}</span>}\n                            <span className=\"spell-card__name\">{card.name}</span>\n                          </div>\n                          <div className=\"spell-card__primary-right\">\n                            <span className=\"spell-card__meta spell-card__meta--range\">{rangeLabel}</span>\n                            <span className=\"spell-card__meta\">{accuracyLabel}</span>\n                            <span className=\"spell-card__meta\">{manaCostLabel}</span>\n                          </div>\n                        </div>\n                        <div className=\"spell-card__row spell-card__row--description spell-card__row--description--static\">\n                          {description && (\n                            <span className=\"spell-card__description\"><em>{description}</em></span>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </section>\n            )}\n            </article>\n          );\n        })}\n      </div>\n\n      <div className=\"wizard-footer-actions\">\n        {allComplete && (\n          <button\n            className=\"prompt-button prompt-button--full\"\n            type=\"button\"\n            onClick={onBeginBattle}\n            disabled={!(playerOneWizard && playerTwoWizard)}\n            title={playerOneWizard && playerTwoWizard ? \"\" : \"Both wizards must finish loading\"}\n          >\n            Begin Battle\n          </button>\n        )}\n        <button className=\"prompt-button button-outline prompt-button--full\" type=\"button\" onClick={onReset}>\n          Start Over\n        </button>\n      </div>\n\n    </section>\n  );\n}\n\nexport default DisplayWizards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}