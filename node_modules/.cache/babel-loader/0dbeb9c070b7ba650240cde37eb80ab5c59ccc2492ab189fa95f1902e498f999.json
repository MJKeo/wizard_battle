{"ast":null,"code":"var _jsxFileName = \"/Users/michaelkeohane/Documents/Projects/LLM-Learnings/projects/week_2/wizard_prompt_battle/wizard-battle-client/src/battle.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { GameState } from \"./classes/gameState\";\nimport combatSystemPrompt from \"./prompts/prompts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatActions = (wizard, currentMana) => {\n  var _wizard$affordable_ac, _wizard$affordable_ac2;\n  if (!wizard) {\n    return [];\n  }\n  const actions = (_wizard$affordable_ac = (_wizard$affordable_ac2 = wizard.affordable_actions) === null || _wizard$affordable_ac2 === void 0 ? void 0 : _wizard$affordable_ac2.call(wizard, currentMana !== null && currentMana !== void 0 ? currentMana : 0)) !== null && _wizard$affordable_ac !== void 0 ? _wizard$affordable_ac : [];\n  return actions.map((action, index) => {\n    var _action$display_card, _card$type, _card$mana_cost, _card$element, _card$description;\n    const card = (_action$display_card = action.display_card) === null || _action$display_card === void 0 ? void 0 : _action$display_card.call(action);\n    if (!card) {\n      return null;\n    }\n    const type = String((_card$type = card.type) !== null && _card$type !== void 0 ? _card$type : \"\").toUpperCase();\n    const manaCostLabel = `🔮 ${(_card$mana_cost = card.mana_cost) !== null && _card$mana_cost !== void 0 ? _card$mana_cost : \"?\"}`;\n    const emoji = type === \"DAMAGE\" ? \"💥\" : type === \"BUFF\" ? \"📈\" : type === \"DEBUFF\" ? \"📉\" : type === \"HEAL\" ? \"🍃\" : type === \"DEFENSE\" ? \"🛡️\" : \"\";\n    const rangeLabel = (() => {\n      if (Array.isArray(card.range) && card.range.length === 2) {\n        const [min, max] = card.range;\n        return `${emoji} ${min}-${max}`.trim();\n      }\n      if (typeof card.range === \"string\") {\n        return `${emoji} ${card.range}`.trim();\n      }\n      return emoji;\n    })();\n    const accuracyLabel = typeof card.accuracy === \"number\" ? `🎯 ${Math.round(card.accuracy * 100)}%` : \"🎯 ?\";\n    const elementLabel = (_card$element = card.element) !== null && _card$element !== void 0 ? _card$element : null;\n    const elementClass = elementLabel ? `element-pill element-${String(elementLabel).toLowerCase()}` : null;\n    const description = (_card$description = card.description) !== null && _card$description !== void 0 ? _card$description : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `spell-card ${type === \"HEAL\" ? \"spell-card-heal\" : type === \"DEFENSE\" ? \"spell-card-defense\" : \"spell-card-spell\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spell-card__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spell-card__primary-left\",\n          children: [elementClass && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: elementClass,\n            children: elementLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spell-card__name\",\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spell-card__primary-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spell-card__meta spell-card__meta--range\",\n            children: rangeLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spell-card__meta\",\n            children: accuracyLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spell-card__meta\",\n            children: manaCostLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), description && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spell-card__row spell-card__row--description\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spell-card__description\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, `${card.name}-${index}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  });\n};\nconst StatCircles = ({\n  current,\n  max,\n  color\n}) => {\n  const clampedCurrent = Math.max(0, current);\n  const clampedMax = Math.max(1, max);\n  const percent = Math.max(0, Math.min(1, clampedCurrent / clampedMax));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stat-horizontal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-horizontal__meter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-horizontal__fill\",\n        style: {\n          width: `${percent * 100}%`,\n          backgroundColor: color\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-horizontal__value\",\n          children: `${clampedCurrent}/${clampedMax}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_c = StatCircles;\nconst HorizontalStatBars = ({\n  state\n}) => {\n  const stats = [{\n    key: \"attack\",\n    label: \"Attack\",\n    color: \"#f87171\"\n  }, {\n    key: \"defense\",\n    label: \"Defense\",\n    color: \"#60a5fa\"\n  }, {\n    key: \"healing\",\n    label: \"Healing\",\n    color: \"#34d399\"\n  }, {\n    key: \"arcane\",\n    label: \"Arcane\",\n    color: \"#c084fc\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stat-bars\",\n    children: stats.map(({\n      key,\n      label,\n      color\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"stat-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-meter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-meter__fill\",\n          style: {\n            width: `${Math.min(1, Math.max(0, state.player.wizard[key])) * 100}%`,\n            backgroundColor: color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_c2 = HorizontalStatBars;\nconst BattleColumn = ({\n  actions,\n  wizardState\n}) => /*#__PURE__*/_jsxDEV(\"section\", {\n  className: \"battle-column\",\n  children: [/*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"battle-column__header\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: wizardState.player.wizard.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"battle-column__content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-stats__resource-bars\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-stats__resource\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"battle-stats__resource-label\",\n            children: \"Health\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCircles, {\n            current: wizardState.current_health,\n            max: wizardState.max_health,\n            color: \"#b91c1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-stats__resource\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"battle-stats__resource-label\",\n            children: \"Mana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCircles, {\n            current: wizardState.current_mana,\n            max: 25,\n            color: \"#a855f7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-stats__bars\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"battle-section-title\",\n          children: \"Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalStatBars, {\n          state: wizardState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"battle-section-title battle-section-title--spells\",\n        children: \"Spells\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spell-cards\",\n        children: actions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 118,\n  columnNumber: 3\n}, this);\n_c3 = BattleColumn;\nconst Battle = ({\n  playerOneWizard,\n  playerTwoWizard,\n  onReset,\n  apiBaseUrl\n}) => {\n  _s();\n  var _playerStates$, _playerStates$2;\n  const gameStateRef = useRef(null);\n  const [playerStates, setPlayerStates] = useState([]);\n  const [battleLog, setBattleLog] = useState([]);\n  const [winner, setWinner] = useState(null);\n  useEffect(() => {\n    if (!playerOneWizard || !playerTwoWizard) {\n      return undefined;\n    }\n    const state = new GameState();\n    state.initialize(playerOneWizard, playerTwoWizard);\n    gameStateRef.current = state;\n    setPlayerStates([...state.player_states]);\n    setBattleLog([]);\n    setWinner(null);\n    let cancelled = false;\n    let activeController = null;\n    const baseUrl = apiBaseUrl !== null && apiBaseUrl !== void 0 ? apiBaseUrl : \"http://localhost:3167\";\n    const runGameLoop = async () => {\n      let actingIndex = 0;\n      let turn = 1;\n      const appendToLog = entry => {\n        setBattleLog(prev => [...prev, entry]);\n      };\n      while (!cancelled) {\n        var _currentState$get_win, _currentState$player_, _currentState$player_2, _actingState$player$w, _actingState$player, _actingState$player$w2, _actingState$player$w3, _actingState$current_;\n        const currentState = gameStateRef.current;\n        if (!currentState) {\n          break;\n        }\n        const existingWinner = (_currentState$get_win = currentState.get_winner) === null || _currentState$get_win === void 0 ? void 0 : _currentState$get_win.call(currentState);\n        if (existingWinner) {\n          setWinner(existingWinner);\n          appendToLog({\n            title: \"Battle Complete\",\n            content: `${existingWinner.name} wins!`\n          });\n          break;\n        }\n        const actingState = (_currentState$player_ = currentState.player_states) === null || _currentState$player_ === void 0 ? void 0 : _currentState$player_[actingIndex];\n        const enemyState = (_currentState$player_2 = currentState.player_states) === null || _currentState$player_2 === void 0 ? void 0 : _currentState$player_2[1 - actingIndex];\n        if (!actingState || !enemyState) {\n          appendToLog({\n            title: \"Error\",\n            content: \"Invalid game state\"\n          });\n          break;\n        }\n        const validActions = (_actingState$player$w = (_actingState$player = actingState.player) === null || _actingState$player === void 0 ? void 0 : (_actingState$player$w2 = _actingState$player.wizard) === null || _actingState$player$w2 === void 0 ? void 0 : (_actingState$player$w3 = _actingState$player$w2.affordable_actions) === null || _actingState$player$w3 === void 0 ? void 0 : _actingState$player$w3.call(_actingState$player$w2, (_actingState$current_ = actingState.current_mana) !== null && _actingState$current_ !== void 0 ? _actingState$current_ : 0)) !== null && _actingState$player$w !== void 0 ? _actingState$player$w : [];\n        if (!validActions.length) {\n          var _currentState$increme;\n          appendToLog({\n            title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n            content: \"No valid actions available. Skipping turn.\"\n          });\n          (_currentState$increme = currentState.increment_mana) === null || _currentState$increme === void 0 ? void 0 : _currentState$increme.call(currentState);\n          setPlayerStates([...currentState.player_states]);\n          actingIndex = 1 - actingIndex;\n          turn += 1;\n          continue;\n        }\n        const systemPrompt = combatSystemPrompt(actingState);\n        const userPrompt = currentState.battleSnapshot(actingIndex);\n        try {\n          var _currentState$increme2, _ref, _selectedAction$name, _selectedAction$const, _currentState$get_win2;\n          activeController = new AbortController();\n          const response = await fetch(`${baseUrl}/generate_action`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              system_prompt: systemPrompt,\n              user_prompt: userPrompt\n            }),\n            signal: activeController.signal\n          });\n          if (cancelled) {\n            break;\n          }\n          if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(`Failed to generate action (${response.status}): ${errorText}`);\n          }\n          const data = await response.json();\n          if (cancelled) {\n            break;\n          }\n          const rawAction = data === null || data === void 0 ? void 0 : data.action;\n          const parsedIndex = typeof rawAction === \"number\" ? rawAction : Number.parseInt(rawAction, 10);\n          if (!Number.isFinite(parsedIndex)) {\n            appendToLog({\n              title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n              content: `Invalid action index returned: ${JSON.stringify(data)}`\n            });\n            break;\n          }\n          const adjustedIndex = parsedIndex - 1;\n          if (adjustedIndex < 0 || adjustedIndex >= validActions.length) {\n            appendToLog({\n              title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n              content: `Action index ${parsedIndex} is out of bounds for ${validActions.length} actions`\n            });\n            break;\n          }\n          const selectedAction = validActions[adjustedIndex];\n          let announcement = \"\";\n          try {\n            var _currentState$perform;\n            announcement = (_currentState$perform = currentState.perform_action(actingIndex, selectedAction)) !== null && _currentState$perform !== void 0 ? _currentState$perform : \"\";\n          } catch (error) {\n            appendToLog({\n              title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n              content: `Action failed: ${String(error)}`\n            });\n            break;\n          }\n          (_currentState$increme2 = currentState.increment_mana) === null || _currentState$increme2 === void 0 ? void 0 : _currentState$increme2.call(currentState);\n          setPlayerStates([...currentState.player_states]);\n          const actionName = (_ref = (_selectedAction$name = selectedAction === null || selectedAction === void 0 ? void 0 : selectedAction.name) !== null && _selectedAction$name !== void 0 ? _selectedAction$name : selectedAction === null || selectedAction === void 0 ? void 0 : (_selectedAction$const = selectedAction.constructor) === null || _selectedAction$const === void 0 ? void 0 : _selectedAction$const.name) !== null && _ref !== void 0 ? _ref : \"Action\";\n          const actionSummary = typeof (selectedAction === null || selectedAction === void 0 ? void 0 : selectedAction.overview) === \"function\" ? selectedAction.overview() : actionName;\n          appendToLog({\n            title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n            content: `${actionSummary}\\n${announcement}`.trim()\n          });\n          const winnerAfterAction = (_currentState$get_win2 = currentState.get_winner) === null || _currentState$get_win2 === void 0 ? void 0 : _currentState$get_win2.call(currentState);\n          if (winnerAfterAction) {\n            setWinner(winnerAfterAction);\n            appendToLog({\n              title: \"Battle Complete\",\n              content: `${winnerAfterAction.name} wins!`\n            });\n            break;\n          }\n          actingIndex = 1 - actingIndex;\n          turn += 1;\n        } catch (error) {\n          if (cancelled || (error === null || error === void 0 ? void 0 : error.name) === \"AbortError\") {\n            break;\n          }\n          appendToLog({\n            title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n            content: `Error during action generation: ${String(error)}`\n          });\n          break;\n        } finally {\n          activeController = null;\n        }\n      }\n    };\n    void runGameLoop();\n    return () => {\n      cancelled = true;\n      if (activeController) {\n        activeController.abort();\n      }\n    };\n  }, [playerOneWizard, playerTwoWizard, apiBaseUrl]);\n  const playerOneState = (_playerStates$ = playerStates[0]) !== null && _playerStates$ !== void 0 ? _playerStates$ : null;\n  const playerTwoState = (_playerStates$2 = playerStates[1]) !== null && _playerStates$2 !== void 0 ? _playerStates$2 : null;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"battle-layout\",\n    children: [playerOneState && /*#__PURE__*/_jsxDEV(BattleColumn, {\n      wizardState: playerOneState,\n      actions: formatActions(playerOneState.player.wizard, playerOneState.current_mana)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"battle-log\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prompt-button button-outline battle-reset\",\n        type: \"button\",\n        onClick: onReset,\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"prompt-button battle-controls__primary\",\n          type: \"button\",\n          disabled: true,\n          children: \"Next Move\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"prompt-button button-outline battle-controls__secondary\",\n          type: \"button\",\n          disabled: true,\n          children: \"Auto Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-log__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Battle Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), winner && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"battle-log__winner\",\n          children: [\"Winner: \", winner.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), battleLog.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"battle-log__empty\",\n          children: \"Resolving first move...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this) : battleLog.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-log__entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: entry.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"api-result__pre\",\n            children: entry.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this)]\n        }, `${entry.title}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), playerTwoState && /*#__PURE__*/_jsxDEV(BattleColumn, {\n      wizardState: playerTwoState,\n      actions: formatActions(playerTwoState.player.wizard, playerTwoState.current_mana)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n};\n_s(Battle, \"gAHLRoPrcykxruW0sumcGz0FbBE=\");\n_c4 = Battle;\nexport default Battle;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StatCircles\");\n$RefreshReg$(_c2, \"HorizontalStatBars\");\n$RefreshReg$(_c3, \"BattleColumn\");\n$RefreshReg$(_c4, \"Battle\");","map":{"version":3,"names":["useEffect","useRef","useState","GameState","combatSystemPrompt","jsxDEV","_jsxDEV","formatActions","wizard","currentMana","_wizard$affordable_ac","_wizard$affordable_ac2","actions","affordable_actions","call","map","action","index","_action$display_card","_card$type","_card$mana_cost","_card$element","_card$description","card","display_card","type","String","toUpperCase","manaCostLabel","mana_cost","emoji","rangeLabel","Array","isArray","range","length","min","max","trim","accuracyLabel","accuracy","Math","round","elementLabel","element","elementClass","toLowerCase","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","StatCircles","current","color","clampedCurrent","clampedMax","percent","style","width","backgroundColor","_c","HorizontalStatBars","state","stats","key","label","player","_c2","BattleColumn","wizardState","current_health","max_health","current_mana","_c3","Battle","playerOneWizard","playerTwoWizard","onReset","apiBaseUrl","_s","_playerStates$","_playerStates$2","gameStateRef","playerStates","setPlayerStates","battleLog","setBattleLog","winner","setWinner","undefined","initialize","player_states","cancelled","activeController","baseUrl","runGameLoop","actingIndex","turn","appendToLog","entry","prev","_currentState$get_win","_currentState$player_","_currentState$player_2","_actingState$player$w","_actingState$player","_actingState$player$w2","_actingState$player$w3","_actingState$current_","currentState","existingWinner","get_winner","title","content","actingState","enemyState","validActions","_currentState$increme","increment_mana","systemPrompt","userPrompt","battleSnapshot","_currentState$increme2","_ref","_selectedAction$name","_selectedAction$const","_currentState$get_win2","AbortController","response","fetch","method","headers","body","JSON","stringify","system_prompt","user_prompt","signal","ok","errorText","text","Error","status","data","json","rawAction","parsedIndex","Number","parseInt","isFinite","adjustedIndex","selectedAction","announcement","_currentState$perform","perform_action","error","actionName","constructor","actionSummary","overview","winnerAfterAction","abort","playerOneState","playerTwoState","onClick","disabled","_c4","$RefreshReg$"],"sources":["/Users/michaelkeohane/Documents/Projects/LLM-Learnings/projects/week_2/wizard_prompt_battle/wizard-battle-client/src/battle.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { GameState } from \"./classes/gameState\";\nimport combatSystemPrompt from \"./prompts/prompts\";\n\nconst formatActions = (wizard, currentMana) => {\n  if (!wizard) {\n    return [];\n  }\n\n  const actions = wizard.affordable_actions?.(currentMana ?? 0) ?? [];\n  return actions.map((action, index) => {\n    const card = action.display_card?.();\n    if (!card) {\n      return null;\n    }\n\n    const type = String(card.type ?? \"\").toUpperCase();\n    const manaCostLabel = `🔮 ${card.mana_cost ?? \"?\"}`;\n    const emoji =\n      type === \"DAMAGE\"\n        ? \"💥\"\n        : type === \"BUFF\"\n        ? \"📈\"\n        : type === \"DEBUFF\"\n        ? \"📉\"\n        : type === \"HEAL\"\n        ? \"🍃\"\n        : type === \"DEFENSE\"\n        ? \"🛡️\"\n        : \"\";\n\n    const rangeLabel = (() => {\n      if (Array.isArray(card.range) && card.range.length === 2) {\n        const [min, max] = card.range;\n        return `${emoji} ${min}-${max}`.trim();\n      }\n      if (typeof card.range === \"string\") {\n        return `${emoji} ${card.range}`.trim();\n      }\n      return emoji;\n    })();\n\n    const accuracyLabel = typeof card.accuracy === \"number\" ? `🎯 ${Math.round(card.accuracy * 100)}%` : \"🎯 ?\";\n    const elementLabel = card.element ?? null;\n    const elementClass = elementLabel ? `element-pill element-${String(elementLabel).toLowerCase()}` : null;\n    const description = card.description ?? \"\";\n\n    return (\n      <div key={`${card.name}-${index}`} className={`spell-card ${type === \"HEAL\" ? \"spell-card-heal\" : type === \"DEFENSE\" ? \"spell-card-defense\" : \"spell-card-spell\"}`}>\n        <div className=\"spell-card__row\">\n          <div className=\"spell-card__primary-left\">\n            {elementClass && <span className={elementClass}>{elementLabel}</span>}\n            <span className=\"spell-card__name\">{card.name}</span>\n          </div>\n          <div className=\"spell-card__primary-right\">\n            <span className=\"spell-card__meta spell-card__meta--range\">{rangeLabel}</span>\n            <span className=\"spell-card__meta\">{accuracyLabel}</span>\n            <span className=\"spell-card__meta\">{manaCostLabel}</span>\n          </div>\n        </div>\n        {description && (\n          <div className=\"spell-card__row spell-card__row--description\">\n            <span className=\"spell-card__description\">\n              <em>{description}</em>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  });\n};\n\nconst StatCircles = ({ current, max, color }) => {\n  const clampedCurrent = Math.max(0, current);\n  const clampedMax = Math.max(1, max);\n  const percent = Math.max(0, Math.min(1, clampedCurrent / clampedMax));\n\n  return (\n    <div className=\"stat-horizontal\">\n      <div className=\"stat-horizontal__meter\">\n        <div\n          className=\"stat-horizontal__fill\"\n          style={{ width: `${percent * 100}%`, backgroundColor: color }}\n        >\n          <span className=\"stat-horizontal__value\">{`${clampedCurrent}/${clampedMax}`}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst HorizontalStatBars = ({ state }) => {\n  const stats = [\n    { key: \"attack\", label: \"Attack\", color: \"#f87171\" },\n    { key: \"defense\", label: \"Defense\", color: \"#60a5fa\" },\n    { key: \"healing\", label: \"Healing\", color: \"#34d399\" },\n    { key: \"arcane\", label: \"Arcane\", color: \"#c084fc\" },\n  ];\n\n  return (\n    <div className=\"stat-bars\">\n      {stats.map(({ key, label, color }) => (\n        <div key={key} className=\"stat-row\">\n          <span className=\"stat-label\">{label}</span>\n          <div className=\"stat-meter\">\n            <div\n              className=\"stat-meter__fill\"\n              style={{ width: `${Math.min(1, Math.max(0, state.player.wizard[key])) * 100}%`, backgroundColor: color }}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst BattleColumn = ({ actions, wizardState }) => (\n  <section className=\"battle-column\">\n    <header className=\"battle-column__header\">\n      <h2>{wizardState.player.wizard.name}</h2>\n    </header>\n    <div className=\"battle-column__content\">\n      <div className=\"battle-stats\">\n        <div className=\"battle-stats__resource-bars\">\n          <div className=\"battle-stats__resource\">\n            <span className=\"battle-stats__resource-label\">Health</span>\n            <StatCircles current={wizardState.current_health} max={wizardState.max_health} color=\"#b91c1c\" />\n          </div>\n          <div className=\"battle-stats__resource\">\n            <span className=\"battle-stats__resource-label\">Mana</span>\n            <StatCircles current={wizardState.current_mana} max={25} color=\"#a855f7\" />\n          </div>\n        </div>\n        <div className=\"battle-stats__bars\">\n          <h4 className=\"battle-section-title\">Stats</h4>\n          <HorizontalStatBars state={wizardState} />\n        </div>\n      </div>\n      <div className=\"battle-actions\">\n        <h4 className=\"battle-section-title battle-section-title--spells\">Spells</h4>\n        <div className=\"spell-cards\">{actions}</div>\n      </div>\n    </div>\n  </section>\n);\n\nconst Battle = ({ playerOneWizard, playerTwoWizard, onReset, apiBaseUrl }) => {\n  const gameStateRef = useRef(null);\n  const [playerStates, setPlayerStates] = useState([]);\n  const [battleLog, setBattleLog] = useState([]);\n  const [winner, setWinner] = useState(null);\n\n  useEffect(() => {\n    if (!playerOneWizard || !playerTwoWizard) {\n      return undefined;\n    }\n\n    const state = new GameState();\n    state.initialize(playerOneWizard, playerTwoWizard);\n    gameStateRef.current = state;\n    setPlayerStates([...state.player_states]);\n    setBattleLog([]);\n    setWinner(null);\n\n    let cancelled = false;\n    let activeController = null;\n    const baseUrl = apiBaseUrl ?? \"http://localhost:3167\";\n\n    const runGameLoop = async () => {\n      let actingIndex = 0;\n      let turn = 1;\n\n      const appendToLog = (entry) => {\n        setBattleLog((prev) => [...prev, entry]);\n      };\n\n      while (!cancelled) {\n        const currentState = gameStateRef.current;\n        if (!currentState) {\n          break;\n        }\n\n        const existingWinner = currentState.get_winner?.();\n        if (existingWinner) {\n          setWinner(existingWinner);\n          appendToLog({\n            title: \"Battle Complete\",\n            content: `${existingWinner.name} wins!`,\n          });\n          break;\n        }\n\n        const actingState = currentState.player_states?.[actingIndex];\n        const enemyState = currentState.player_states?.[1 - actingIndex];\n\n        if (!actingState || !enemyState) {\n          appendToLog({ title: \"Error\", content: \"Invalid game state\" });\n          break;\n        }\n\n        const validActions = actingState.player?.wizard?.affordable_actions?.(actingState.current_mana ?? 0) ?? [];\n\n        if (!validActions.length) {\n          appendToLog({\n            title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n            content: \"No valid actions available. Skipping turn.\",\n          });\n\n          currentState.increment_mana?.();\n          setPlayerStates([...currentState.player_states]);\n\n          actingIndex = 1 - actingIndex;\n          turn += 1;\n          continue;\n        }\n\n        const systemPrompt = combatSystemPrompt(actingState);\n        const userPrompt = currentState.battleSnapshot(actingIndex);\n\n        try {\n          activeController = new AbortController();\n          const response = await fetch(`${baseUrl}/generate_action`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              system_prompt: systemPrompt,\n              user_prompt: userPrompt,\n            }),\n            signal: activeController.signal,\n          });\n\n          if (cancelled) {\n            break;\n          }\n\n          if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(`Failed to generate action (${response.status}): ${errorText}`);\n          }\n\n          const data = await response.json();\n          if (cancelled) {\n            break;\n          }\n\n          const rawAction = data?.action;\n          const parsedIndex =\n            typeof rawAction === \"number\"\n              ? rawAction\n              : Number.parseInt(rawAction, 10);\n\n          if (!Number.isFinite(parsedIndex)) {\n            appendToLog({\n              title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n              content: `Invalid action index returned: ${JSON.stringify(data)}`,\n            });\n            break;\n          }\n\n          const adjustedIndex = parsedIndex - 1;\n\n          if (adjustedIndex < 0 || adjustedIndex >= validActions.length) {\n            appendToLog({\n              title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n              content: `Action index ${parsedIndex} is out of bounds for ${validActions.length} actions`,\n            });\n            break;\n          }\n\n          const selectedAction = validActions[adjustedIndex];\n          let announcement = \"\";\n\n          try {\n            announcement = currentState.perform_action(actingIndex, selectedAction) ?? \"\";\n          } catch (error) {\n            appendToLog({\n              title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n              content: `Action failed: ${String(error)}`,\n            });\n            break;\n          }\n\n          currentState.increment_mana?.();\n          setPlayerStates([...currentState.player_states]);\n\n          const actionName = selectedAction?.name ?? selectedAction?.constructor?.name ?? \"Action\";\n          const actionSummary =\n            typeof selectedAction?.overview === \"function\"\n              ? selectedAction.overview()\n              : actionName;\n\n          appendToLog({\n            title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n            content: `${actionSummary}\\n${announcement}`.trim(),\n          });\n\n          const winnerAfterAction = currentState.get_winner?.();\n          if (winnerAfterAction) {\n            setWinner(winnerAfterAction);\n            appendToLog({\n              title: \"Battle Complete\",\n              content: `${winnerAfterAction.name} wins!`,\n            });\n            break;\n          }\n\n          actingIndex = 1 - actingIndex;\n          turn += 1;\n        } catch (error) {\n          if (cancelled || error?.name === \"AbortError\") {\n            break;\n          }\n\n          appendToLog({\n            title: `Turn ${turn}: ${actingState.player.wizard.name}`,\n            content: `Error during action generation: ${String(error)}`,\n          });\n          break;\n        } finally {\n          activeController = null;\n        }\n      }\n    };\n\n    void runGameLoop();\n\n    return () => {\n      cancelled = true;\n      if (activeController) {\n        activeController.abort();\n      }\n    };\n  }, [playerOneWizard, playerTwoWizard, apiBaseUrl]);\n\n  const playerOneState = playerStates[0] ?? null;\n  const playerTwoState = playerStates[1] ?? null;\n\n  return (\n    <section className=\"battle-layout\">\n      {playerOneState && (\n        <BattleColumn\n          wizardState={playerOneState}\n          actions={formatActions(playerOneState.player.wizard, playerOneState.current_mana)}\n        />\n      )}\n\n      <section className=\"battle-log\">\n        <button className=\"prompt-button button-outline battle-reset\" type=\"button\" onClick={onReset}>\n          Start Over\n        </button>\n        <div className=\"battle-controls\">\n          <button className=\"prompt-button battle-controls__primary\" type=\"button\" disabled>\n            Next Move\n          </button>\n          <button className=\"prompt-button button-outline battle-controls__secondary\" type=\"button\" disabled>\n            Auto Progress\n          </button>\n        </div>\n        <div className=\"battle-log__content\">\n          <h2>Battle Log</h2>\n          {winner && (\n            <p className=\"battle-log__winner\">Winner: {winner.name}</p>\n          )}\n          {battleLog.length === 0 ? (\n            <p className=\"battle-log__empty\">Resolving first move...</p>\n          ) : (\n            battleLog.map((entry, index) => (\n              <div key={`${entry.title}-${index}`} className=\"battle-log__entry\">\n                <h3>{entry.title}</h3>\n                <pre className=\"api-result__pre\">{entry.content}</pre>\n              </div>\n            ))\n          )}\n        </div>\n      </section>\n\n      {playerTwoState && (\n        <BattleColumn\n          wizardState={playerTwoState}\n          actions={formatActions(playerTwoState.player.wizard, playerTwoState.current_mana)}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default Battle;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}