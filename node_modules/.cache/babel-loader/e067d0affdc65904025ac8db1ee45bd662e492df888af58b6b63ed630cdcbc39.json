{"ast":null,"code":"import Action from \"./action\";\nimport ActionType from \"../enums/actionType\";\nimport ActionTarget from \"../enums/actionTarget\";\nclass Pass extends Action {\n  constructor() {\n    super(ActionType.PASS, 0, 1, 0);\n  }\n  perform_action_subclass() {\n    return {\n      succeeded: true,\n      value: 0,\n      action_type: ActionType.PASS,\n      target: ActionTarget.SELF\n    };\n  }\n  range() {\n    return null;\n  }\n  compact_effect() {\n    return \"Do nothing, saving mana for next turn.\";\n  }\n  mana_cost() {\n    return 0;\n  }\n  overview() {\n    return \"Action Type: 'PASS'\";\n  }\n  failure_announcement() {\n    throw new Error(\"Pass literally can't fail\");\n  }\n  success_announcement(wizard, value) {\n    return `${wizard.name} passes.`;\n  }\n  action_target() {\n    return ActionTarget.SELF;\n  }\n  display_card() {\n    throw new Error(\"Pass has no display card\");\n  }\n}\nexport default Pass;","map":{"version":3,"names":["Action","ActionType","ActionTarget","Pass","constructor","PASS","perform_action_subclass","succeeded","value","action_type","target","SELF","range","compact_effect","mana_cost","overview","failure_announcement","Error","success_announcement","wizard","name","action_target","display_card"],"sources":["/Users/michaelkeohane/Documents/Projects/LLM-Learnings/projects/week_2/wizard_prompt_battle/wizard-battle-client/src/classes/pass.js"],"sourcesContent":["import Action from \"./action\";\nimport ActionType from \"../enums/actionType\";\nimport ActionTarget from \"../enums/actionTarget\";\n\nclass Pass extends Action {\n  constructor() {\n    super(ActionType.PASS, 0, 1, 0);\n  }\n\n  perform_action_subclass() {\n    return {\n        succeeded: true,\n        value: 0,\n        action_type: ActionType.PASS,\n        target: ActionTarget.SELF,\n      };\n  }\n\n  range() {\n    return null;\n  }\n\n  compact_effect() {\n    return \"Do nothing, saving mana for next turn.\"\n  }\n\n  mana_cost() {\n    return 0;\n  }\n\n  overview() {\n    return \"Action Type: 'PASS'\";\n  }\n\n  failure_announcement() {\n    throw new Error(\"Pass literally can't fail\");\n  }\n\n  success_announcement(wizard, value) {\n    return `${wizard.name} passes.`;\n  }\n\n  action_target() {\n    return ActionTarget.SELF;\n  }\n\n  display_card() {\n    throw new Error(\"Pass has no display card\");\n  }\n}\n\nexport default Pass;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,YAAY,MAAM,uBAAuB;AAEhD,MAAMC,IAAI,SAASH,MAAM,CAAC;EACxBI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAACH,UAAU,CAACI,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjC;EAEAC,uBAAuBA,CAAA,EAAG;IACxB,OAAO;MACHC,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE,CAAC;MACRC,WAAW,EAAER,UAAU,CAACI,IAAI;MAC5BK,MAAM,EAAER,YAAY,CAACS;IACvB,CAAC;EACL;EAEAC,KAAKA,CAAA,EAAG;IACN,OAAO,IAAI;EACb;EAEAC,cAAcA,CAAA,EAAG;IACf,OAAO,wCAAwC;EACjD;EAEAC,SAASA,CAAA,EAAG;IACV,OAAO,CAAC;EACV;EAEAC,QAAQA,CAAA,EAAG;IACT,OAAO,qBAAqB;EAC9B;EAEAC,oBAAoBA,CAAA,EAAG;IACrB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EAEAC,oBAAoBA,CAACC,MAAM,EAAEX,KAAK,EAAE;IAClC,OAAO,GAAGW,MAAM,CAACC,IAAI,UAAU;EACjC;EAEAC,aAAaA,CAAA,EAAG;IACd,OAAOnB,YAAY,CAACS,IAAI;EAC1B;EAEAW,YAAYA,CAAA,EAAG;IACb,MAAM,IAAIL,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF;AAEA,eAAed,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}