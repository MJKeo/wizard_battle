{"ast":null,"code":"var _jsxFileName = \"/Users/michaelkeohane/Documents/Projects/LLM-Learnings/projects/week_2/wizard_prompt_battle/wizard-battle-client/src/display_wizards.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DisplayWizards({\n  descriptions,\n  apiBaseUrl,\n  onReset\n}) {\n  _s();\n  const [results, setResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setResults([]);\n      setErrorMessage(\"\");\n      const {\n        playerOne,\n        playerTwo\n      } = descriptions;\n      const entries = [{\n        label: \"Player 1\",\n        description: playerOne\n      }, {\n        label: \"Player 2\",\n        description: playerTwo\n      }];\n      const appendResult = (label, updates) => {\n        setResults(prev => {\n          const existing = prev.find(entry => entry.label === label);\n          if (existing) {\n            return prev.map(entry => entry.label === label ? {\n              ...entry,\n              ...updates\n            } : entry);\n          }\n          return [...prev, {\n            label,\n            ...updates\n          }];\n        });\n      };\n      try {\n        await Promise.all(entries.map(async ({\n          label,\n          description\n        }) => {\n          const statsResponse = await fetch(`${apiBaseUrl}/generate_wizard_stats`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              description\n            })\n          });\n          if (!statsResponse.ok) {\n            throw new Error(`${label} wizard stats failed with status ${statsResponse.status}`);\n          }\n          const statsData = await statsResponse.json();\n          appendResult(label, {\n            stats: statsData\n          });\n          const spellsResponse = await fetch(`${apiBaseUrl}/generate_spells`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              description,\n              stats: statsData\n            })\n          });\n          if (!spellsResponse.ok) {\n            throw new Error(`${label} spell generation failed with status ${spellsResponse.status}`);\n          }\n          const spellsData = await spellsResponse.json();\n          appendResult(label, {\n            spells: spellsData\n          });\n        }));\n      } catch (error) {\n        setErrorMessage(error instanceof Error ? `Failed to generate wizards or spells. ${error.message}` : \"Failed to generate wizards or spells.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [descriptions, apiBaseUrl]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"prompt-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"summary-title\",\n        children: \"Generated Wizards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prompt-button\",\n        onClick: onReset,\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Generating wizards...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 24\n    }, this), results.map(({\n      label,\n      stats,\n      spells\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"summary-subtitle\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), stats && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"summary-subtitle\",\n          children: \"Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"api-result__pre\",\n          children: JSON.stringify(stats, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), spells && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"summary-subtitle\",\n          children: \"Spells\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"api-result__pre\",\n          children: JSON.stringify(spells, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, label, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayWizards, \"gMXp7e04HrBQgdJtbDE+x7bbzuc=\");\n_c = DisplayWizards;\nexport default DisplayWizards;\nvar _c;\n$RefreshReg$(_c, \"DisplayWizards\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DisplayWizards","descriptions","apiBaseUrl","onReset","_s","results","setResults","errorMessage","setErrorMessage","isLoading","setIsLoading","fetchData","playerOne","playerTwo","entries","label","description","appendResult","updates","prev","existing","find","entry","map","Promise","all","statsResponse","fetch","method","headers","body","JSON","stringify","ok","Error","status","statsData","json","stats","spellsResponse","spellsData","spells","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/michaelkeohane/Documents/Projects/LLM-Learnings/projects/week_2/wizard_prompt_battle/wizard-battle-client/src/display_wizards.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction DisplayWizards({ descriptions, apiBaseUrl, onReset }) {\n  const [results, setResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setResults([]);\n      setErrorMessage(\"\");\n\n      const { playerOne, playerTwo } = descriptions;\n      const entries = [\n        { label: \"Player 1\", description: playerOne },\n        { label: \"Player 2\", description: playerTwo },\n      ];\n\n      const appendResult = (label, updates) => {\n        setResults((prev) => {\n          const existing = prev.find((entry) => entry.label === label);\n          if (existing) {\n            return prev.map((entry) =>\n              entry.label === label ? { ...entry, ...updates } : entry\n            );\n          }\n          return [...prev, { label, ...updates }];\n        });\n      };\n\n      try {\n        await Promise.all(\n          entries.map(async ({ label, description }) => {\n            const statsResponse = await fetch(`${apiBaseUrl}/generate_wizard_stats`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({ description }),\n            });\n\n            if (!statsResponse.ok) {\n              throw new Error(`${label} wizard stats failed with status ${statsResponse.status}`);\n            }\n\n            const statsData = await statsResponse.json();\n            appendResult(label, { stats: statsData });\n\n            const spellsResponse = await fetch(`${apiBaseUrl}/generate_spells`, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({ description, stats: statsData }),\n            });\n\n            if (!spellsResponse.ok) {\n              throw new Error(`${label} spell generation failed with status ${spellsResponse.status}`);\n            }\n\n            const spellsData = await spellsResponse.json();\n            appendResult(label, { spells: spellsData });\n          })\n        );\n      } catch (error) {\n        setErrorMessage(\n          error instanceof Error\n            ? `Failed to generate wizards or spells. ${error.message}`\n            : \"Failed to generate wizards or spells.\"\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [descriptions, apiBaseUrl]);\n\n  return (\n    <section className=\"prompt-card\">\n      <div className=\"summary-header\">\n        <h2 className=\"summary-title\">Generated Wizards</h2>\n        <button className=\"prompt-button\" onClick={onReset}>\n          Start Over\n        </button>\n      </div>\n\n      {isLoading && <p className=\"loading-message\">Generating wizards...</p>}\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n      {results.map(({ label, stats, spells }) => (\n        <div key={label} className=\"api-result\">\n          <h3 className=\"summary-subtitle\">{label}</h3>\n          {stats && (\n            <>\n              <h4 className=\"summary-subtitle\">Stats</h4>\n              <pre className=\"api-result__pre\">\n                {JSON.stringify(stats, null, 2)}\n              </pre>\n            </>\n          )}\n          {spells && (\n            <>\n              <h4 className=\"summary-subtitle\">Spells</h4>\n              <pre className=\"api-result__pre\">\n                {JSON.stringify(spells, null, 2)}\n              </pre>\n            </>\n          )}\n        </div>\n      ))}\n    </section>\n  );\n}\n\nexport default DisplayWizards;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,cAAcA,CAAC;EAAEC,YAAY;EAAEC,UAAU;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BD,YAAY,CAAC,IAAI,CAAC;MAClBJ,UAAU,CAAC,EAAE,CAAC;MACdE,eAAe,CAAC,EAAE,CAAC;MAEnB,MAAM;QAAEI,SAAS;QAAEC;MAAU,CAAC,GAAGZ,YAAY;MAC7C,MAAMa,OAAO,GAAG,CACd;QAAEC,KAAK,EAAE,UAAU;QAAEC,WAAW,EAAEJ;MAAU,CAAC,EAC7C;QAAEG,KAAK,EAAE,UAAU;QAAEC,WAAW,EAAEH;MAAU,CAAC,CAC9C;MAED,MAAMI,YAAY,GAAGA,CAACF,KAAK,EAAEG,OAAO,KAAK;QACvCZ,UAAU,CAAEa,IAAI,IAAK;UACnB,MAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACP,KAAK,KAAKA,KAAK,CAAC;UAC5D,IAAIK,QAAQ,EAAE;YACZ,OAAOD,IAAI,CAACI,GAAG,CAAED,KAAK,IACpBA,KAAK,CAACP,KAAK,KAAKA,KAAK,GAAG;cAAE,GAAGO,KAAK;cAAE,GAAGJ;YAAQ,CAAC,GAAGI,KACrD,CAAC;UACH;UACA,OAAO,CAAC,GAAGH,IAAI,EAAE;YAAEJ,KAAK;YAAE,GAAGG;UAAQ,CAAC,CAAC;QACzC,CAAC,CAAC;MACJ,CAAC;MAED,IAAI;QACF,MAAMM,OAAO,CAACC,GAAG,CACfX,OAAO,CAACS,GAAG,CAAC,OAAO;UAAER,KAAK;UAAEC;QAAY,CAAC,KAAK;UAC5C,MAAMU,aAAa,GAAG,MAAMC,KAAK,CAAC,GAAGzB,UAAU,wBAAwB,EAAE;YACvE0B,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEhB;YAAY,CAAC;UACtC,CAAC,CAAC;UAEF,IAAI,CAACU,aAAa,CAACO,EAAE,EAAE;YACrB,MAAM,IAAIC,KAAK,CAAC,GAAGnB,KAAK,oCAAoCW,aAAa,CAACS,MAAM,EAAE,CAAC;UACrF;UAEA,MAAMC,SAAS,GAAG,MAAMV,aAAa,CAACW,IAAI,CAAC,CAAC;UAC5CpB,YAAY,CAACF,KAAK,EAAE;YAAEuB,KAAK,EAAEF;UAAU,CAAC,CAAC;UAEzC,MAAMG,cAAc,GAAG,MAAMZ,KAAK,CAAC,GAAGzB,UAAU,kBAAkB,EAAE;YAClE0B,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEhB,WAAW;cAAEsB,KAAK,EAAEF;YAAU,CAAC;UACxD,CAAC,CAAC;UAEF,IAAI,CAACG,cAAc,CAACN,EAAE,EAAE;YACtB,MAAM,IAAIC,KAAK,CAAC,GAAGnB,KAAK,wCAAwCwB,cAAc,CAACJ,MAAM,EAAE,CAAC;UAC1F;UAEA,MAAMK,UAAU,GAAG,MAAMD,cAAc,CAACF,IAAI,CAAC,CAAC;UAC9CpB,YAAY,CAACF,KAAK,EAAE;YAAE0B,MAAM,EAAED;UAAW,CAAC,CAAC;QAC7C,CAAC,CACH,CAAC;MACH,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdlC,eAAe,CACbkC,KAAK,YAAYR,KAAK,GAClB,yCAAyCQ,KAAK,CAACC,OAAO,EAAE,GACxD,uCACN,CAAC;MACH,CAAC,SAAS;QACRjC,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACV,YAAY,EAAEC,UAAU,CAAC,CAAC;EAE9B,oBACEL,OAAA;IAAS+C,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC9BhD,OAAA;MAAK+C,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BhD,OAAA;QAAI+C,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpDpD,OAAA;QAAQ+C,SAAS,EAAC,eAAe;QAACM,OAAO,EAAE/C,OAAQ;QAAA0C,QAAA,EAAC;MAEpD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELxC,SAAS,iBAAIZ,OAAA;MAAG+C,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACrE1C,YAAY,iBAAIV,OAAA;MAAG+C,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEtC;IAAY;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE/D5C,OAAO,CAACkB,GAAG,CAAC,CAAC;MAAER,KAAK;MAAEuB,KAAK;MAAEG;IAAO,CAAC,kBACpC5C,OAAA;MAAiB+C,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACrChD,OAAA;QAAI+C,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAE9B;MAAK;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC5CX,KAAK,iBACJzC,OAAA,CAAAE,SAAA;QAAA8C,QAAA,gBACEhD,OAAA;UAAI+C,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3CpD,OAAA;UAAK+C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7Bd,IAAI,CAACC,SAAS,CAACM,KAAK,EAAE,IAAI,EAAE,CAAC;QAAC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA,eACN,CACH,EACAR,MAAM,iBACL5C,OAAA,CAAAE,SAAA;QAAA8C,QAAA,gBACEhD,OAAA;UAAI+C,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5CpD,OAAA;UAAK+C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7Bd,IAAI,CAACC,SAAS,CAACS,MAAM,EAAE,IAAI,EAAE,CAAC;QAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA,eACN,CACH;IAAA,GAjBOlC,KAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAAC7C,EAAA,CAhHQJ,cAAc;AAAAmD,EAAA,GAAdnD,cAAc;AAkHvB,eAAeA,cAAc;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}