{"ast":null,"code":"var _jsxFileName = \"/Users/michaelkeohane/Documents/Projects/LLM-Learnings/projects/week_2/wizard_prompt_battle/wizard-battle-client/src/battle.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { GameState } from \"./classes/gameState\";\nimport combatSystemPrompt from \"./prompts/prompts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatActions = (wizard, currentMana) => {\n  var _wizard$all_actions, _wizard$all_actions2;\n  if (!wizard) {\n    return [];\n  }\n  const availableMana = Number.isFinite(currentMana) ? currentMana : 0;\n  const actions = (_wizard$all_actions = (_wizard$all_actions2 = wizard.all_actions) === null || _wizard$all_actions2 === void 0 ? void 0 : _wizard$all_actions2.call(wizard)) !== null && _wizard$all_actions !== void 0 ? _wizard$all_actions : [];\n  return actions.map((action, index) => {\n    var _action$display_card, _card$type, _card$mana_cost, _card$element, _card$description;\n    const card = (_action$display_card = action.display_card) === null || _action$display_card === void 0 ? void 0 : _action$display_card.call(action);\n    if (!card) {\n      return null;\n    }\n    const manaCost = typeof action.mana_cost === \"function\" ? action.mana_cost() : card.mana_cost;\n    const isAffordable = Number.isFinite(manaCost) ? manaCost <= availableMana : true;\n    const type = String((_card$type = card.type) !== null && _card$type !== void 0 ? _card$type : \"\").toUpperCase();\n    const manaCostLabel = `🔮 ${(_card$mana_cost = card.mana_cost) !== null && _card$mana_cost !== void 0 ? _card$mana_cost : \"?\"}`;\n    const emoji = type === \"DAMAGE\" ? \"💥\" : type === \"BUFF\" ? \"📈\" : type === \"DEBUFF\" ? \"📉\" : type === \"HEAL\" ? \"🍃\" : type === \"DEFENSE\" ? \"🛡️\" : \"\";\n    const rangeLabel = (() => {\n      if (Array.isArray(card.range) && card.range.length === 2) {\n        const [min, max] = card.range;\n        return `${emoji} ${min}-${max}`.trim();\n      }\n      if (typeof card.range === \"string\") {\n        return `${emoji} ${card.range}`.trim();\n      }\n      return emoji;\n    })();\n    const accuracyLabel = typeof card.accuracy === \"number\" ? `🎯 ${Math.round(card.accuracy * 100)}%` : \"🎯 ?\";\n    const elementLabel = (_card$element = card.element) !== null && _card$element !== void 0 ? _card$element : null;\n    const elementClass = elementLabel ? `element-pill element-${String(elementLabel).toLowerCase()}` : null;\n    const description = (_card$description = card.description) !== null && _card$description !== void 0 ? _card$description : \"\";\n    const cardClassName = [\"spell-card\", type === \"HEAL\" ? \"spell-card-heal\" : type === \"DEFENSE\" ? \"spell-card-defense\" : \"spell-card-spell\", !isAffordable ? \"spell-card--unavailable\" : null].filter(Boolean).join(\" \");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cardClassName,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spell-card__row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spell-card__primary-left\",\n          children: [elementClass && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: elementClass,\n            children: elementLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spell-card__name\",\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spell-card__primary-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spell-card__meta spell-card__meta--range\",\n            children: rangeLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spell-card__meta\",\n            children: accuracyLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spell-card__meta\",\n            children: manaCostLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, `${card.name}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  });\n};\nconst StatCircles = ({\n  current,\n  max,\n  color\n}) => {\n  const clampedCurrent = Math.max(0, current);\n  const clampedMax = Math.max(1, max);\n  const percent = Math.max(0, Math.min(1, clampedCurrent / clampedMax));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stat-horizontal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-horizontal__meter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-horizontal__fill\",\n        style: {\n          width: `${percent * 100}%`,\n          backgroundColor: color\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-horizontal__value\",\n          children: `${clampedCurrent}/${clampedMax}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_c = StatCircles;\nconst HorizontalStatBars = ({\n  state\n}) => {\n  const stats = [{\n    key: \"attack\",\n    label: \"Attack\",\n    color: \"#f87171\"\n  }, {\n    key: \"defense\",\n    label: \"Defense\",\n    color: \"#60a5fa\"\n  }, {\n    key: \"healing\",\n    label: \"Healing\",\n    color: \"#34d399\"\n  }, {\n    key: \"arcane\",\n    label: \"Arcane\",\n    color: \"#c084fc\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stat-bars\",\n    children: stats.map(({\n      key,\n      label,\n      color\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"stat-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-meter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-meter__fill\",\n          style: {\n            width: `${Math.min(1, Math.max(0, state.player.wizard[key])) * 100}%`,\n            backgroundColor: color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_c2 = HorizontalStatBars;\nconst BattleColumn = ({\n  actions,\n  wizardState\n}) => /*#__PURE__*/_jsxDEV(\"section\", {\n  className: \"battle-column\",\n  children: [/*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"battle-column__header\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: wizardState.player.wizard.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"battle-column__content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-stats__resource-bars\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-stats__resource\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"battle-stats__resource-label\",\n            children: \"Health\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCircles, {\n            current: wizardState.current_health,\n            max: wizardState.max_health,\n            color: \"#b91c1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-stats__resource\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"battle-stats__resource-label\",\n            children: \"Mana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatCircles, {\n            current: wizardState.current_mana,\n            max: 25,\n            color: \"#a855f7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-stats__bars\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"battle-section-title\",\n          children: \"Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalStatBars, {\n          state: wizardState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"battle-section-title battle-section-title--spells\",\n        children: \"Spells\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spell-cards\",\n        children: actions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 128,\n  columnNumber: 3\n}, this);\n_c3 = BattleColumn;\nconst Battle = ({\n  playerOneWizard,\n  playerTwoWizard,\n  onReset,\n  apiBaseUrl\n}) => {\n  _s();\n  var _playerStates$, _playerStates$2;\n  const gameStateRef = useRef(null);\n  const controllerRef = useRef(null);\n  const cancelledRef = useRef(false);\n  const baseUrlRef = useRef(apiBaseUrl !== null && apiBaseUrl !== void 0 ? apiBaseUrl : \"http://localhost:3167\");\n  const winnerRef = useRef(null);\n  const [playerStates, setPlayerStates] = useState([]);\n  const [battleLog, setBattleLog] = useState([]);\n  const [winner, setWinner] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  useEffect(() => {\n    baseUrlRef.current = apiBaseUrl !== null && apiBaseUrl !== void 0 ? apiBaseUrl : \"http://localhost:3167\";\n  }, [apiBaseUrl]);\n  const appendToLog = useCallback(entry => {\n    if (cancelledRef.current) {\n      return;\n    }\n    setBattleLog(prev => [entry, ...prev]);\n  }, []);\n  const checkForWinner = useCallback(() => {\n    var _currentState$get_win;\n    const currentState = gameStateRef.current;\n    if (!currentState) {\n      return false;\n    }\n    const winningWizard = (_currentState$get_win = currentState.get_winner) === null || _currentState$get_win === void 0 ? void 0 : _currentState$get_win.call(currentState);\n    if (winningWizard && winnerRef.current !== winningWizard) {\n      winnerRef.current = winningWizard;\n      if (!cancelledRef.current) {\n        setWinner(winningWizard);\n        appendToLog({\n          title: \"Battle Complete\",\n          content: `${winningWizard.name} wins!`\n        });\n      }\n      return true;\n    }\n    return false;\n  }, [appendToLog]);\n  const fetchActionForIndex = useCallback(async actingIndex => {\n    var _currentState$player_, _actingState$player$w, _actingState$player$w2, _actingState$player$w3, _actingState$current_;\n    const currentState = gameStateRef.current;\n    if (!currentState) {\n      return null;\n    }\n    const actingState = (_currentState$player_ = currentState.player_states) === null || _currentState$player_ === void 0 ? void 0 : _currentState$player_[actingIndex];\n    if (!actingState) {\n      return null;\n    }\n    const wizardName = actingState.player.wizard.name;\n    const validActions = (_actingState$player$w = (_actingState$player$w2 = (_actingState$player$w3 = actingState.player.wizard).affordable_actions) === null || _actingState$player$w2 === void 0 ? void 0 : _actingState$player$w2.call(_actingState$player$w3, (_actingState$current_ = actingState.current_mana) !== null && _actingState$current_ !== void 0 ? _actingState$current_ : 0)) !== null && _actingState$player$w !== void 0 ? _actingState$player$w : [];\n    if (!validActions.length) {\n      appendToLog({\n        title: `${wizardName} cannot act`,\n        content: \"No valid actions available. Skipping turn.\"\n      });\n      return null;\n    }\n    const controller = new AbortController();\n    controllerRef.current = controller;\n    try {\n      const response = await fetch(`${baseUrlRef.current}/generate_action`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          system_prompt: combatSystemPrompt(actingState),\n          user_prompt: currentState.battleSnapshot(actingIndex)\n        }),\n        signal: controller.signal\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Failed to generate action (${response.status}): ${errorText}`);\n      }\n      const data = await response.json();\n      const rawAction = data === null || data === void 0 ? void 0 : data.action;\n      const parsedIndex = typeof rawAction === \"number\" ? rawAction : Number.parseInt(rawAction, 10);\n      if (!Number.isFinite(parsedIndex)) {\n        appendToLog({\n          title: `${wizardName} action error`,\n          content: `Invalid action index returned: ${JSON.stringify(data)}`\n        });\n        return null;\n      }\n      const adjustedIndex = parsedIndex - 1;\n      if (adjustedIndex < 0 || adjustedIndex >= validActions.length) {\n        appendToLog({\n          title: `${wizardName} action error`,\n          content: `Action index ${parsedIndex} is out of bounds for ${validActions.length} actions`\n        });\n        return null;\n      }\n      return {\n        actingIndex,\n        wizardName,\n        selectedAction: validActions[adjustedIndex]\n      };\n    } catch (error) {\n      if ((error === null || error === void 0 ? void 0 : error.name) === \"AbortError\" || cancelledRef.current) {\n        return null;\n      }\n      appendToLog({\n        title: `${wizardName} action error`,\n        content: `Error during action generation: ${String(error)}`\n      });\n      return null;\n    } finally {\n      if (controllerRef.current === controller) {\n        controllerRef.current = null;\n      }\n    }\n  }, [appendToLog]);\n  const executeSelectedAction = useCallback(actionData => {\n    if (!actionData || cancelledRef.current) {\n      return;\n    }\n    const currentState = gameStateRef.current;\n    if (!currentState) {\n      return;\n    }\n    try {\n      var _currentState$perform, _actionData$selectedA, _actionData$selectedA2, _actionData$selectedA3;\n      const announcement = (_currentState$perform = currentState.perform_action(actionData.actingIndex, actionData.selectedAction)) !== null && _currentState$perform !== void 0 ? _currentState$perform : \"\";\n      setPlayerStates([...currentState.player_states]);\n      const actionSummary = typeof ((_actionData$selectedA = actionData.selectedAction) === null || _actionData$selectedA === void 0 ? void 0 : _actionData$selectedA.overview) === \"function\" ? actionData.selectedAction.overview() : (_actionData$selectedA2 = (_actionData$selectedA3 = actionData.selectedAction) === null || _actionData$selectedA3 === void 0 ? void 0 : _actionData$selectedA3.name) !== null && _actionData$selectedA2 !== void 0 ? _actionData$selectedA2 : \"Action\";\n      appendToLog({\n        title: `${actionData.wizardName} acts`,\n        content: [actionSummary, announcement].filter(Boolean).join(\"\\n\") || actionSummary\n      });\n    } catch (error) {\n      appendToLog({\n        title: `${actionData.wizardName} action error`,\n        content: `Action failed: ${String(error)}`\n      });\n    }\n  }, [appendToLog]);\n  useEffect(() => {\n    if (!playerOneWizard || !playerTwoWizard) {\n      return undefined;\n    }\n    cancelledRef.current = false;\n    winnerRef.current = null;\n    if (controllerRef.current) {\n      controllerRef.current.abort();\n      controllerRef.current = null;\n    }\n    const state = new GameState();\n    state.initialize(playerOneWizard, playerTwoWizard);\n    gameStateRef.current = state;\n    setPlayerStates([...state.player_states]);\n    setBattleLog([]);\n    setWinner(null);\n    setIsProcessing(true);\n    const processTurns = async () => {\n      let turn = 1;\n      while (!cancelledRef.current) {\n        appendToLog({\n          title: `Turn ${turn}`,\n          content: \"\"\n        });\n        for (const actingIndex of [0, 1]) {\n          if (cancelledRef.current || checkForWinner()) {\n            return;\n          }\n          const actionData = await fetchActionForIndex(actingIndex);\n          if (cancelledRef.current) {\n            return;\n          }\n          if (actionData) {\n            executeSelectedAction(actionData);\n          }\n          if (cancelledRef.current || checkForWinner()) {\n            return;\n          }\n        }\n        if (cancelledRef.current || checkForWinner()) {\n          return;\n        }\n        const currentState = gameStateRef.current;\n        if (!currentState) {\n          return;\n        }\n        const beforeMana = currentState.player_states.map(stateEntry => stateEntry.current_mana);\n        currentState.increment_mana();\n        const updatedStates = [...currentState.player_states];\n        setPlayerStates(updatedStates);\n        const manaGains = updatedStates.map((stateEntry, index) => Math.max(0, stateEntry.current_mana - beforeMana[index]));\n        appendToLog({\n          title: `Turn ${turn} Summary`,\n          content: `End of turn ${turn}, ${updatedStates[0].player.wizard.name} gains back ${manaGains[0]} mana, ${updatedStates[1].player.wizard.name} gains back ${manaGains[1]} mana`\n        });\n        turn += 1;\n      }\n    };\n    processTurns().catch(error => {\n      if (!cancelledRef.current) {\n        appendToLog({\n          title: \"Battle error\",\n          content: String(error)\n        });\n      }\n    }).finally(() => {\n      if (!cancelledRef.current) {\n        setIsProcessing(false);\n      }\n    });\n    return () => {\n      cancelledRef.current = true;\n      if (controllerRef.current) {\n        controllerRef.current.abort();\n        controllerRef.current = null;\n      }\n    };\n  }, [playerOneWizard, playerTwoWizard, appendToLog, fetchActionForIndex, executeSelectedAction, checkForWinner]);\n  const playerOneState = (_playerStates$ = playerStates[0]) !== null && _playerStates$ !== void 0 ? _playerStates$ : null;\n  const playerTwoState = (_playerStates$2 = playerStates[1]) !== null && _playerStates$2 !== void 0 ? _playerStates$2 : null;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"battle-layout\",\n    children: [playerOneState && /*#__PURE__*/_jsxDEV(BattleColumn, {\n      wizardState: playerOneState,\n      actions: formatActions(playerOneState.player.wizard, playerOneState.current_mana)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"battle-log\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prompt-button button-outline battle-reset\",\n        type: \"button\",\n        onClick: onReset,\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"battle-log__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Battle Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), winner && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"battle-log__winner\",\n          children: [\"Winner: \", winner.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 22\n        }, this), battleLog.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"battle-log__empty\",\n          children: isProcessing ? \"Simulating battle...\" : \"Battle ready. Awaiting events.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this) : battleLog.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"battle-log__entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: entry.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"api-result__pre\",\n            children: entry.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 17\n          }, this)]\n        }, `${entry.title}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), playerTwoState && /*#__PURE__*/_jsxDEV(BattleColumn, {\n      wizardState: playerTwoState,\n      actions: formatActions(playerTwoState.player.wizard, playerTwoState.current_mana)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 5\n  }, this);\n};\n_s(Battle, \"YkgWblp0h88vb3ElXjgS2UqWFvE=\");\n_c4 = Battle;\nexport default Battle;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StatCircles\");\n$RefreshReg$(_c2, \"HorizontalStatBars\");\n$RefreshReg$(_c3, \"BattleColumn\");\n$RefreshReg$(_c4, \"Battle\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","GameState","combatSystemPrompt","jsxDEV","_jsxDEV","formatActions","wizard","currentMana","_wizard$all_actions","_wizard$all_actions2","availableMana","Number","isFinite","actions","all_actions","call","map","action","index","_action$display_card","_card$type","_card$mana_cost","_card$element","_card$description","card","display_card","manaCost","mana_cost","isAffordable","type","String","toUpperCase","manaCostLabel","emoji","rangeLabel","Array","isArray","range","length","min","max","trim","accuracyLabel","accuracy","Math","round","elementLabel","element","elementClass","toLowerCase","description","cardClassName","filter","Boolean","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","StatCircles","current","color","clampedCurrent","clampedMax","percent","style","width","backgroundColor","_c","HorizontalStatBars","state","stats","key","label","player","_c2","BattleColumn","wizardState","current_health","max_health","current_mana","_c3","Battle","playerOneWizard","playerTwoWizard","onReset","apiBaseUrl","_s","_playerStates$","_playerStates$2","gameStateRef","controllerRef","cancelledRef","baseUrlRef","winnerRef","playerStates","setPlayerStates","battleLog","setBattleLog","winner","setWinner","isProcessing","setIsProcessing","appendToLog","entry","prev","checkForWinner","_currentState$get_win","currentState","winningWizard","get_winner","title","content","fetchActionForIndex","actingIndex","_currentState$player_","_actingState$player$w","_actingState$player$w2","_actingState$player$w3","_actingState$current_","actingState","player_states","wizardName","validActions","affordable_actions","controller","AbortController","response","fetch","method","headers","body","JSON","stringify","system_prompt","user_prompt","battleSnapshot","signal","ok","errorText","text","Error","status","data","json","rawAction","parsedIndex","parseInt","adjustedIndex","selectedAction","error","executeSelectedAction","actionData","_currentState$perform","_actionData$selectedA","_actionData$selectedA2","_actionData$selectedA3","announcement","perform_action","actionSummary","overview","undefined","abort","initialize","processTurns","turn","beforeMana","stateEntry","increment_mana","updatedStates","manaGains","catch","finally","playerOneState","playerTwoState","onClick","_c4","$RefreshReg$"],"sources":["/Users/michaelkeohane/Documents/Projects/LLM-Learnings/projects/week_2/wizard_prompt_battle/wizard-battle-client/src/battle.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { GameState } from \"./classes/gameState\";\nimport combatSystemPrompt from \"./prompts/prompts\";\n\nconst formatActions = (wizard, currentMana) => {\n  if (!wizard) {\n    return [];\n  }\n\n  const availableMana = Number.isFinite(currentMana) ? currentMana : 0;\n  const actions = wizard.all_actions?.() ?? [];\n\n  return actions.map((action, index) => {\n    const card = action.display_card?.();\n    if (!card) {\n      return null;\n    }\n\n    const manaCost = typeof action.mana_cost === \"function\" ? action.mana_cost() : card.mana_cost;\n    const isAffordable = Number.isFinite(manaCost) ? manaCost <= availableMana : true;\n\n    const type = String(card.type ?? \"\").toUpperCase();\n    const manaCostLabel = `🔮 ${card.mana_cost ?? \"?\"}`;\n    const emoji =\n      type === \"DAMAGE\"\n        ? \"💥\"\n        : type === \"BUFF\"\n        ? \"📈\"\n        : type === \"DEBUFF\"\n        ? \"📉\"\n        : type === \"HEAL\"\n        ? \"🍃\"\n        : type === \"DEFENSE\"\n        ? \"🛡️\"\n        : \"\";\n\n    const rangeLabel = (() => {\n      if (Array.isArray(card.range) && card.range.length === 2) {\n        const [min, max] = card.range;\n        return `${emoji} ${min}-${max}`.trim();\n      }\n      if (typeof card.range === \"string\") {\n        return `${emoji} ${card.range}`.trim();\n      }\n      return emoji;\n    })();\n\n    const accuracyLabel = typeof card.accuracy === \"number\" ? `🎯 ${Math.round(card.accuracy * 100)}%` : \"🎯 ?\";\n    const elementLabel = card.element ?? null;\n    const elementClass = elementLabel ? `element-pill element-${String(elementLabel).toLowerCase()}` : null;\n    const description = card.description ?? \"\";\n\n    const cardClassName = [\n      \"spell-card\",\n      type === \"HEAL\"\n        ? \"spell-card-heal\"\n        : type === \"DEFENSE\"\n        ? \"spell-card-defense\"\n        : \"spell-card-spell\",\n      !isAffordable ? \"spell-card--unavailable\" : null,\n    ]\n      .filter(Boolean)\n      .join(\" \");\n\n    return (\n      <div key={`${card.name}-${index}`} className={cardClassName}>\n        <div className=\"spell-card__row\">\n          <div className=\"spell-card__primary-left\">\n            {elementClass && <span className={elementClass}>{elementLabel}</span>}\n            <span className=\"spell-card__name\">{card.name}</span>\n          </div>\n          <div className=\"spell-card__primary-right\">\n            <span className=\"spell-card__meta spell-card__meta--range\">{rangeLabel}</span>\n            <span className=\"spell-card__meta\">{accuracyLabel}</span>\n            <span className=\"spell-card__meta\">{manaCostLabel}</span>\n          </div>\n        </div>\n      </div>\n    );\n  });\n};\n\nconst StatCircles = ({ current, max, color }) => {\n  const clampedCurrent = Math.max(0, current);\n  const clampedMax = Math.max(1, max);\n  const percent = Math.max(0, Math.min(1, clampedCurrent / clampedMax));\n\n  return (\n    <div className=\"stat-horizontal\">\n      <div className=\"stat-horizontal__meter\">\n        <div\n          className=\"stat-horizontal__fill\"\n          style={{ width: `${percent * 100}%`, backgroundColor: color }}\n        >\n          <span className=\"stat-horizontal__value\">{`${clampedCurrent}/${clampedMax}`}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst HorizontalStatBars = ({ state }) => {\n  const stats = [\n    { key: \"attack\", label: \"Attack\", color: \"#f87171\" },\n    { key: \"defense\", label: \"Defense\", color: \"#60a5fa\" },\n    { key: \"healing\", label: \"Healing\", color: \"#34d399\" },\n    { key: \"arcane\", label: \"Arcane\", color: \"#c084fc\" },\n  ];\n\n  return (\n    <div className=\"stat-bars\">\n      {stats.map(({ key, label, color }) => (\n        <div key={key} className=\"stat-row\">\n          <span className=\"stat-label\">{label}</span>\n          <div className=\"stat-meter\">\n            <div\n              className=\"stat-meter__fill\"\n              style={{ width: `${Math.min(1, Math.max(0, state.player.wizard[key])) * 100}%`, backgroundColor: color }}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst BattleColumn = ({ actions, wizardState }) => (\n  <section className=\"battle-column\">\n    <header className=\"battle-column__header\">\n      <h2>{wizardState.player.wizard.name}</h2>\n    </header>\n    <div className=\"battle-column__content\">\n      <div className=\"battle-stats\">\n        <div className=\"battle-stats__resource-bars\">\n          <div className=\"battle-stats__resource\">\n            <span className=\"battle-stats__resource-label\">Health</span>\n            <StatCircles current={wizardState.current_health} max={wizardState.max_health} color=\"#b91c1c\" />\n          </div>\n          <div className=\"battle-stats__resource\">\n            <span className=\"battle-stats__resource-label\">Mana</span>\n            <StatCircles current={wizardState.current_mana} max={25} color=\"#a855f7\" />\n          </div>\n        </div>\n        <div className=\"battle-stats__bars\">\n          <h4 className=\"battle-section-title\">Stats</h4>\n          <HorizontalStatBars state={wizardState} />\n        </div>\n      </div>\n      <div className=\"battle-actions\">\n        <h4 className=\"battle-section-title battle-section-title--spells\">Spells</h4>\n        <div className=\"spell-cards\">{actions}</div>\n      </div>\n    </div>\n  </section>\n);\n\nconst Battle = ({ playerOneWizard, playerTwoWizard, onReset, apiBaseUrl }) => {\n  const gameStateRef = useRef(null);\n  const controllerRef = useRef(null);\n  const cancelledRef = useRef(false);\n  const baseUrlRef = useRef(apiBaseUrl ?? \"http://localhost:3167\");\n  const winnerRef = useRef(null);\n\n  const [playerStates, setPlayerStates] = useState([]);\n  const [battleLog, setBattleLog] = useState([]);\n  const [winner, setWinner] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  useEffect(() => {\n    baseUrlRef.current = apiBaseUrl ?? \"http://localhost:3167\";\n  }, [apiBaseUrl]);\n\n  const appendToLog = useCallback((entry) => {\n    if (cancelledRef.current) {\n      return;\n    }\n    setBattleLog((prev) => [entry, ...prev]);\n  }, []);\n\n  const checkForWinner = useCallback(() => {\n    const currentState = gameStateRef.current;\n    if (!currentState) {\n      return false;\n    }\n\n    const winningWizard = currentState.get_winner?.();\n    if (winningWizard && winnerRef.current !== winningWizard) {\n      winnerRef.current = winningWizard;\n      if (!cancelledRef.current) {\n        setWinner(winningWizard);\n        appendToLog({\n          title: \"Battle Complete\",\n          content: `${winningWizard.name} wins!`,\n        });\n      }\n      return true;\n    }\n\n    return false;\n  }, [appendToLog]);\n\n  const fetchActionForIndex = useCallback(\n    async (actingIndex) => {\n      const currentState = gameStateRef.current;\n      if (!currentState) {\n        return null;\n      }\n\n      const actingState = currentState.player_states?.[actingIndex];\n      if (!actingState) {\n        return null;\n      }\n\n      const wizardName = actingState.player.wizard.name;\n      const validActions =\n        actingState.player.wizard.affordable_actions?.(actingState.current_mana ?? 0) ?? [];\n\n      if (!validActions.length) {\n        appendToLog({\n          title: `${wizardName} cannot act`,\n          content: \"No valid actions available. Skipping turn.\",\n        });\n        return null;\n      }\n\n      const controller = new AbortController();\n      controllerRef.current = controller;\n\n      try {\n        const response = await fetch(`${baseUrlRef.current}/generate_action`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            system_prompt: combatSystemPrompt(actingState),\n            user_prompt: currentState.battleSnapshot(actingIndex),\n          }),\n          signal: controller.signal,\n        });\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Failed to generate action (${response.status}): ${errorText}`);\n        }\n\n        const data = await response.json();\n        const rawAction = data?.action;\n        const parsedIndex =\n          typeof rawAction === \"number\" ? rawAction : Number.parseInt(rawAction, 10);\n\n        if (!Number.isFinite(parsedIndex)) {\n          appendToLog({\n            title: `${wizardName} action error`,\n            content: `Invalid action index returned: ${JSON.stringify(data)}`,\n          });\n          return null;\n        }\n\n        const adjustedIndex = parsedIndex - 1;\n        if (adjustedIndex < 0 || adjustedIndex >= validActions.length) {\n          appendToLog({\n            title: `${wizardName} action error`,\n            content: `Action index ${parsedIndex} is out of bounds for ${validActions.length} actions`,\n          });\n          return null;\n        }\n\n        return {\n          actingIndex,\n          wizardName,\n          selectedAction: validActions[adjustedIndex],\n        };\n      } catch (error) {\n        if (error?.name === \"AbortError\" || cancelledRef.current) {\n          return null;\n        }\n        appendToLog({\n          title: `${wizardName} action error`,\n          content: `Error during action generation: ${String(error)}`,\n        });\n        return null;\n      } finally {\n        if (controllerRef.current === controller) {\n          controllerRef.current = null;\n        }\n      }\n    },\n    [appendToLog]\n  );\n\n  const executeSelectedAction = useCallback(\n    (actionData) => {\n      if (!actionData || cancelledRef.current) {\n        return;\n      }\n\n      const currentState = gameStateRef.current;\n      if (!currentState) {\n        return;\n      }\n\n      try {\n        const announcement =\n          currentState.perform_action(actionData.actingIndex, actionData.selectedAction) ?? \"\";\n\n        setPlayerStates([...currentState.player_states]);\n\n        const actionSummary =\n          typeof actionData.selectedAction?.overview === \"function\"\n            ? actionData.selectedAction.overview()\n            : actionData.selectedAction?.name ?? \"Action\";\n\n        appendToLog({\n          title: `${actionData.wizardName} acts`,\n          content: [actionSummary, announcement].filter(Boolean).join(\"\\n\") || actionSummary,\n        });\n      } catch (error) {\n        appendToLog({\n          title: `${actionData.wizardName} action error`,\n          content: `Action failed: ${String(error)}`,\n        });\n      }\n    },\n    [appendToLog]\n  );\n\n  useEffect(() => {\n    if (!playerOneWizard || !playerTwoWizard) {\n      return undefined;\n    }\n\n    cancelledRef.current = false;\n    winnerRef.current = null;\n\n    if (controllerRef.current) {\n      controllerRef.current.abort();\n      controllerRef.current = null;\n    }\n\n    const state = new GameState();\n    state.initialize(playerOneWizard, playerTwoWizard);\n    gameStateRef.current = state;\n\n    setPlayerStates([...state.player_states]);\n    setBattleLog([]);\n    setWinner(null);\n    setIsProcessing(true);\n\n    const processTurns = async () => {\n      let turn = 1;\n\n      while (!cancelledRef.current) {\n        appendToLog({ title: `Turn ${turn}`, content: \"\" });\n\n        for (const actingIndex of [0, 1]) {\n          if (cancelledRef.current || checkForWinner()) {\n            return;\n          }\n\n          const actionData = await fetchActionForIndex(actingIndex);\n          if (cancelledRef.current) {\n            return;\n          }\n\n          if (actionData) {\n            executeSelectedAction(actionData);\n          }\n\n          if (cancelledRef.current || checkForWinner()) {\n            return;\n          }\n        }\n\n        if (cancelledRef.current || checkForWinner()) {\n          return;\n        }\n\n        const currentState = gameStateRef.current;\n        if (!currentState) {\n          return;\n        }\n\n        const beforeMana = currentState.player_states.map((stateEntry) => stateEntry.current_mana);\n        currentState.increment_mana();\n        const updatedStates = [...currentState.player_states];\n        setPlayerStates(updatedStates);\n\n        const manaGains = updatedStates.map((stateEntry, index) =>\n          Math.max(0, stateEntry.current_mana - beforeMana[index])\n        );\n\n        appendToLog({\n          title: `Turn ${turn} Summary`,\n          content: `End of turn ${turn}, ${updatedStates[0].player.wizard.name} gains back ${manaGains[0]} mana, ${updatedStates[1].player.wizard.name} gains back ${manaGains[1]} mana`,\n        });\n\n        turn += 1;\n      }\n    };\n\n    processTurns()\n      .catch((error) => {\n        if (!cancelledRef.current) {\n          appendToLog({\n            title: \"Battle error\",\n            content: String(error),\n          });\n        }\n      })\n      .finally(() => {\n        if (!cancelledRef.current) {\n          setIsProcessing(false);\n        }\n      });\n\n    return () => {\n      cancelledRef.current = true;\n      if (controllerRef.current) {\n        controllerRef.current.abort();\n        controllerRef.current = null;\n      }\n    };\n  }, [\n    playerOneWizard,\n    playerTwoWizard,\n    appendToLog,\n    fetchActionForIndex,\n    executeSelectedAction,\n    checkForWinner,\n  ]);\n\n  const playerOneState = playerStates[0] ?? null;\n  const playerTwoState = playerStates[1] ?? null;\n\n  return (\n    <section className=\"battle-layout\">\n      {playerOneState && (\n        <BattleColumn\n          wizardState={playerOneState}\n          actions={formatActions(playerOneState.player.wizard, playerOneState.current_mana)}\n        />\n      )}\n\n      <section className=\"battle-log\">\n        <button className=\"prompt-button button-outline battle-reset\" type=\"button\" onClick={onReset}>\n          Start Over\n        </button>\n        <div className=\"battle-log__content\">\n          <h2>Battle Log</h2>\n          {winner && <p className=\"battle-log__winner\">Winner: {winner.name}</p>}\n          {battleLog.length === 0 ? (\n            <p className=\"battle-log__empty\">\n              {isProcessing ? \"Simulating battle...\" : \"Battle ready. Awaiting events.\"}\n            </p>\n          ) : (\n            battleLog.map((entry, index) => (\n              <div key={`${entry.title}-${index}`} className=\"battle-log__entry\">\n                <h3>{entry.title}</h3>\n                <pre className=\"api-result__pre\">{entry.content}</pre>\n              </div>\n            ))\n          )}\n        </div>\n      </section>\n\n      {playerTwoState && (\n        <BattleColumn\n          wizardState={playerTwoState}\n          actions={formatActions(playerTwoState.player.wizard, playerTwoState.current_mana)}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default Battle;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}