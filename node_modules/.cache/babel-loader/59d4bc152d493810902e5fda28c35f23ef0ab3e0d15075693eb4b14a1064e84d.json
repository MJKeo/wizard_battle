{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/Users/michaelkeohane/Documents/Projects/LLM-Learnings/projects/week_2/wizard_prompt_battle/wizard-battle-client/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"/Users/michaelkeohane/Documents/Projects/LLM-Learnings/projects/week_2/wizard_prompt_battle/wizard-battle-client/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nvar _BattleLogMessageType;\nvar _values = /*#__PURE__*/_classPrivateFieldLooseKey(\"values\");\nclass BattleLogMessageType {\n  constructor(name) {\n    this.name = name;\n  }\n  static get PLAYER_ACTION() {\n    return _classPrivateFieldLooseBase(BattleLogMessageType, _values)[_values].PLAYER_ACTION;\n  }\n  static get TURN_START() {\n    return _classPrivateFieldLooseBase(BattleLogMessageType, _values)[_values].TURN_START;\n  }\n  static get TURN_END() {\n    return _classPrivateFieldLooseBase(BattleLogMessageType, _values)[_values].TURN_END;\n  }\n  static get ERROR() {\n    return _classPrivateFieldLooseBase(BattleLogMessageType, _values)[_values].ERROR;\n  }\n  static values() {\n    return Object.values(_classPrivateFieldLooseBase(BattleLogMessageType, _values)[_values]);\n  }\n  static fromName(name) {\n    if (!name) {\n      throw new Error(\"BattleLogMessageType.fromName requires a name\");\n    }\n    const key = String(name).toUpperCase();\n    const result = _classPrivateFieldLooseBase(BattleLogMessageType, _values)[_values][key];\n    if (!result) {\n      throw new Error(`Unknown BattleLogMessageType: ${name}`);\n    }\n    return result;\n  }\n}\n_BattleLogMessageType = BattleLogMessageType;\nObject.defineProperty(BattleLogMessageType, _values, {\n  writable: true,\n  value: {\n    PLAYER_ACTION: new _BattleLogMessageType(\"PLAYER_ACTION\"),\n    TURN_START: new _BattleLogMessageType(\"TURN_START\"),\n    TURN_END: new _BattleLogMessageType(\"TURN_END\"),\n    ERROR: new _BattleLogMessageType(\"ERROR\")\n  }\n});\nexport default BattleLogMessageType;","map":{"version":3,"names":["BattleLogMessageType","constructor","name","PLAYER_ACTION","_classPrivateFieldLooseBase","_values","TURN_START","TURN_END","ERROR","values","Object","fromName","Error","key","String","toUpperCase","result","_BattleLogMessageType","defineProperty","writable","value"],"sources":["/Users/michaelkeohane/Documents/Projects/LLM-Learnings/projects/week_2/wizard_prompt_battle/wizard-battle-client/src/enums/battleLogMessageType.js"],"sourcesContent":["class BattleLogMessageType {\n    constructor(name) {\n      this.name = name;\n    }\n  \n    static #values = {\n      PLAYER_ACTION: new BattleLogMessageType(\"PLAYER_ACTION\"),\n      TURN_START: new BattleLogMessageType(\"TURN_START\"),\n      TURN_END: new BattleLogMessageType(\"TURN_END\"),\n      ERROR: new BattleLogMessageType(\"ERROR\"),\n    };\n  \n    static get PLAYER_ACTION() {\n      return BattleLogMessageType.#values.PLAYER_ACTION;\n    }\n  \n    static get TURN_START() {\n      return BattleLogMessageType.#values.TURN_START;\n    }\n  \n    static get TURN_END() {\n      return BattleLogMessageType.#values.TURN_END;\n    }\n\n    static get ERROR() {\n        return BattleLogMessageType.#values.ERROR;\n      }\n  \n    static values() {\n      return Object.values(BattleLogMessageType.#values);\n    }\n  \n    static fromName(name) {\n      if (!name) {\n        throw new Error(\"BattleLogMessageType.fromName requires a name\");\n      }\n      const key = String(name).toUpperCase();\n      const result = BattleLogMessageType.#values[key];\n      if (!result) {\n        throw new Error(`Unknown BattleLogMessageType: ${name}`);\n      }\n      return result;\n    }\n  }\n  \n  export default BattleLogMessageType;\n  "],"mappings":";;;;AAAA,MAAMA,oBAAoB,CAAC;EACvBC,WAAWA,CAACC,IAAI,EAAE;IAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EASA,WAAWC,aAAaA,CAAA,EAAG;IACzB,OAAOC,2BAAA,CAAAJ,oBAAoB,EAAAK,OAAA,EAAAA,OAAA,EAASF,aAAa;EACnD;EAEA,WAAWG,UAAUA,CAAA,EAAG;IACtB,OAAOF,2BAAA,CAAAJ,oBAAoB,EAAAK,OAAA,EAAAA,OAAA,EAASC,UAAU;EAChD;EAEA,WAAWC,QAAQA,CAAA,EAAG;IACpB,OAAOH,2BAAA,CAAAJ,oBAAoB,EAAAK,OAAA,EAAAA,OAAA,EAASE,QAAQ;EAC9C;EAEA,WAAWC,KAAKA,CAAA,EAAG;IACf,OAAOJ,2BAAA,CAAAJ,oBAAoB,EAAAK,OAAA,EAAAA,OAAA,EAASG,KAAK;EAC3C;EAEF,OAAOC,MAAMA,CAAA,EAAG;IACd,OAAOC,MAAM,CAACD,MAAM,CAAAL,2BAAA,CAACJ,oBAAoB,EAAAK,OAAA,EAAAA,OAAA,CAAQ,CAAC;EACpD;EAEA,OAAOM,QAAQA,CAACT,IAAI,EAAE;IACpB,IAAI,CAACA,IAAI,EAAE;MACT,MAAM,IAAIU,KAAK,CAAC,+CAA+C,CAAC;IAClE;IACA,MAAMC,GAAG,GAAGC,MAAM,CAACZ,IAAI,CAAC,CAACa,WAAW,CAAC,CAAC;IACtC,MAAMC,MAAM,GAAGZ,2BAAA,CAAAJ,oBAAoB,EAAAK,OAAA,EAAAA,OAAA,EAASQ,GAAG,CAAC;IAChD,IAAI,CAACG,MAAM,EAAE;MACX,MAAM,IAAIJ,KAAK,CAAC,iCAAiCV,IAAI,EAAE,CAAC;IAC1D;IACA,OAAOc,MAAM;EACf;AACF;AAACC,qBAAA,GA3CGjB,oBAAoB;AAAAU,MAAA,CAAAQ,cAAA,CAApBlB,oBAAoB,EAAAK,OAAA;EAAAc,QAAA;EAAAC,KAAA,EAKL;IACfjB,aAAa,EAAE,IAAIH,qBAAoB,CAAC,eAAe,CAAC;IACxDM,UAAU,EAAE,IAAIN,qBAAoB,CAAC,YAAY,CAAC;IAClDO,QAAQ,EAAE,IAAIP,qBAAoB,CAAC,UAAU,CAAC;IAC9CQ,KAAK,EAAE,IAAIR,qBAAoB,CAAC,OAAO;EACzC;AAAC;AAmCH,eAAeA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}